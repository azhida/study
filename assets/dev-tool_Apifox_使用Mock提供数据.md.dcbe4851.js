import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.aaef0e9b.js";const B=JSON.parse('{"title":"Apifox 使用 Mock 提供数据","description":"","frontmatter":{},"headers":[],"relativePath":"dev-tool/Apifox/使用Mock提供数据.md","lastUpdated":1685496672000}'),l={name:"dev-tool/Apifox/使用Mock提供数据.md"},p=o(`<h1 id="apifox-使用-mock-提供数据" tabindex="-1">Apifox 使用 Mock 提供数据 <a class="header-anchor" href="#apifox-使用-mock-提供数据" aria-label="Permalink to &quot;Apifox 使用 Mock 提供数据&quot;">​</a></h1><p>在后端开发好 API 之前，先使用 Mock 数据服务，便于前端后端同步开发。</p><h2 id="创建数据模型" tabindex="-1">创建数据模型 <a class="header-anchor" href="#创建数据模型" aria-label="Permalink to &quot;创建数据模型&quot;">​</a></h2><ul><li>添加数据模型名称</li><li>定义模型字段</li></ul><p>模型字段示例：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">code</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">成功</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-3511624831487016</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">乔霞</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-6172675397789772</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">杨平</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="创建接口" tabindex="-1">创建接口 <a class="header-anchor" href="#创建接口" aria-label="Permalink to &quot;创建接口&quot;">​</a></h2><ul><li>填写接口 url</li><li>选择服务环境 - 本地 Mock - 可能需要下载客户端</li><li>填写接口基本信息</li><li>在返回响应栏目下，点击 <code>根节点 -- object -- 引用模型</code> ，在弹出窗口选择之前创建好的 数据模型</li><li>生成响应示例，验证返回数据是否正确</li><li>保存接口</li><li>发送数据</li><li>查看实际请求地址</li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://zhuanlan.zhihu.com/p/468478958?utm_id=0" target="_blank" rel="noreferrer">使用Apifox快速Mock数据</a></p>`,10),e=[p];function t(c,r,D,F,i,y){return a(),n("div",null,e)}const d=s(l,[["render",t]]);export{B as __pageData,d as default};
