import{_ as a,o as e,c as s,Q as l}from"./chunks/framework.aaef0e9b.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"server/php/laravel/laravel-admin自定义操作日志的方法.md","lastUpdated":1680584985000}'),n={name:"server/php/laravel/laravel-admin自定义操作日志的方法.md"},p=l(`<h4 id="参考-laravel-admin之修改操作日志" tabindex="-1">参考 <a href="https://blog.csdn.net/qq_35816459/article/details/78632802" target="_blank" rel="noreferrer">Laravel-admin之修改操作日志</a> <a class="header-anchor" href="#参考-laravel-admin之修改操作日志" aria-label="Permalink to &quot;参考 [Laravel-admin之修改操作日志](https://blog.csdn.net/qq_35816459/article/details/78632802)&quot;">​</a></h4><h6 id="本文内容为转载-感谢大神指点" tabindex="-1">本文内容为转载，感谢大神指点！ <a class="header-anchor" href="#本文内容为转载-感谢大神指点" aria-label="Permalink to &quot;本文内容为转载，感谢大神指点！&quot;">​</a></h6><h4 id="laravel-admin之修改操作日志" tabindex="-1">Laravel-admin之修改操作日志 <a class="header-anchor" href="#laravel-admin之修改操作日志" aria-label="Permalink to &quot;Laravel-admin之修改操作日志&quot;">​</a></h4><p>以前的后台都是使用自己手写的日志，但是最近公司工作较多，修改其他项目的任务就搭在了我的身上，今天用户要修改后台的操作日志界面，让登陆者可以更多地知道登录后端者的所有相关操作：包括谁修改了，谁删除了，谁审核了，谁添加了，这样才能根据相应的操作者进行相应的处罚。</p><p>我现在要修改的则是Laravel-admin后台，要想修改操作日志，需要如下操作：</p><p>1.找到原始操作日志控制器文件LogController.php：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">\\vendor\\encore\\laravel-admin\\src\\Controllers</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>2.找到原始中间件文件OperationLog.php：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">\\vendor\\encore\\laravel-admin\\src\\Middleware</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>3.更改配置文件的操作日志文件自动加载：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">&#39;operation_log&#39; = false,</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>4.在\\app\\Http\\Middleware目录下新建OperationLog.php文件，与原始文件内容一致，命名空间需要修改为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">namespace App\\Http\\Middleware;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>5.在\\app\\Admin\\Controllers目录下新建LogController.php文件，命名空间需要修改为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">namespace app\\Admin\\Controllers;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>6.在\\app\\Admin目录下的routes.php文件中添加路由：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$router-&gt;resource(&#39;logs&#39;, LogController::class);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>7.在\\app\\Http目录下的Kernel.php中添加相应的中间件信息：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">&#39;OperationLog&#39; =&gt; \\App\\Http\\Middleware\\OperationLog::class,</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>以上步骤即可成功，然后根据需求进行对应信息的提取即可，但是添加数据时需要注意的是不要使用系统常量，否则系统常量字段无法插入成功！！！</p><p>以上问题全部解决了，但是新增的数据无法正常插入到数据库内，经过不断的测试，最终找到解决方案：</p><p>在\\vendor\\encore\\laravel-admin\\src\\Auth\\Database目录下的OperationLog.php中，将protected $fillable = [&#39;user_id&#39;, &#39;path&#39;, &#39;method&#39;, &#39;ip&#39;, &#39;input&#39;];中添加相对应的字段，则添加相应的显示数据正常！问题将被解决！</p><p>我们不要害怕问题，只要用心去解决，去寻找问题的真相，那么我们将会抵达真相的彼岸！！！</p>`,23),t=[p];function o(r,i,c,d,h,b){return e(),s("div",null,t)}const _=a(n,[["render",o]]);export{g as __pageData,_ as default};
