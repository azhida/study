import{_ as a,o as s,c as e,Q as n}from"./chunks/framework.aaef0e9b.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"server/php/laravel/laravel_DB学习笔记.md","lastUpdated":1680584985000}'),l={name:"server/php/laravel/laravel_DB学习笔记.md"},t=n(`<h6 id="执行sql文件" tabindex="-1">执行sql文件 <a class="header-anchor" href="#执行sql文件" aria-label="Permalink to &quot;执行sql文件&quot;">​</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">DB::unprepared(file_get_contents(public_path(&#39;test.sql&#39;)));</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h6 id="读取指定数据表的所有字段" tabindex="-1">读取指定数据表的所有字段 <a class="header-anchor" href="#读取指定数据表的所有字段" aria-label="Permalink to &quot;读取指定数据表的所有字段&quot;">​</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$column = Schema::getColumnListing(&#39;table_name&#39;);</span></span>
<span class="line"><span style="color:#babed8;"># 拼接 字段</span></span>
<span class="line"><span style="color:#babed8;">join($column, &#39;&quot;,&quot;&#39;);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h6 id="查询时添加不存在的列并赋值" tabindex="-1">查询时添加不存在的列并赋值 <a class="header-anchor" href="#查询时添加不存在的列并赋值" aria-label="Permalink to &quot;查询时添加不存在的列并赋值&quot;">​</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">SELECT &#39;888&#39; as add_column, id from table_name;</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">DB::table(&#39;table_name&#39;)-&gt;selectRaw(&quot;id, {$value} as add_column&quot;)-&gt;get();</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h6 id="increment时实现对两个字段同时加1" tabindex="-1">increment时实现对两个字段同时加1 <a class="header-anchor" href="#increment时实现对两个字段同时加1" aria-label="Permalink to &quot;increment时实现对两个字段同时加1&quot;">​</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">DB::table(test)-&gt;increment(&#39;num&#39;,1,[&#39;vote&#39;=&gt;DB::raw(&#39;\`vote\`+1&#39;)]);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h6 id="获取所有表信息" tabindex="-1">获取所有表信息 <a class="header-anchor" href="#获取所有表信息" aria-label="Permalink to &quot;获取所有表信息&quot;">​</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;"># 包含表结构信息</span></span>
<span class="line"><span style="color:#babed8;">$tables = \\DB::connection()-&gt;getDoctrineSchemaManager()-&gt;listTables();</span></span>
<span class="line"><span style="color:#babed8;"># 只有表名称</span></span>
<span class="line"><span style="color:#babed8;">$tables = DB::connection()-&gt;getDoctrineSchemaManager()-&gt;listTableNames();</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div>`,10),o=[t];function p(c,i,r,d,b,h){return s(),e("div",null,o)}const _=a(l,[["render",p]]);export{m as __pageData,_ as default};
