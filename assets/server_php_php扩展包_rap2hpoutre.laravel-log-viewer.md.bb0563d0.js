import{_ as e,o as a,c as l,Q as o}from"./chunks/framework.aaef0e9b.js";const v=JSON.parse('{"title":"rap2hpoutre/laravel-log-viewer","description":"","frontmatter":{},"headers":[],"relativePath":"server/php/php扩展包/rap2hpoutre.laravel-log-viewer.md","lastUpdated":1680584985000}'),r={name:"server/php/php扩展包/rap2hpoutre.laravel-log-viewer.md"},s=o(`<h1 id="rap2hpoutre-laravel-log-viewer" tabindex="-1"><a href="https://packagist.org/packages/rap2hpoutre/laravel-log-viewer" target="_blank" rel="noreferrer">rap2hpoutre/laravel-log-viewer</a> <a class="header-anchor" href="#rap2hpoutre-laravel-log-viewer" aria-label="Permalink to &quot;[rap2hpoutre/laravel-log-viewer](https://packagist.org/packages/rap2hpoutre/laravel-log-viewer)&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>日志查看工具</p><p>日常的开发工作中，查看日志应该是我们最常干的事情了，日志对于我们调试程序，修复 Bug，优化代码来说必不可少也非常关键。使用 Linux 的 <code>tail -f</code> 命令持续监控日志文件是我们比较常用的方法：<code>tail -f storage/logs/laravel.log</code> 。</p><p>但是有时候我们需要去测试环境或者正式环境检查错误日志，有些非开发人员在进行测试的时候也想查看日志，最好能有一个 Web 的方式显示日志内容，方便所有人自行查看日志内容。而这个包刚好可以解决这一需求。</p><p><a href="https://learnku.com/courses/laravel-package/2019/log-view-tool-rap2hpoutrelaravel-log-viewer/1971" target="_blank" rel="noreferrer">教程</a></p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">composer require rap2hpoutre/laravel-log-viewer</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p><code>rap2hpoutre/laravel-log-viewer</code> 使用起来非常简单，只需要定义一个路由，指向扩展包提供的控制器方法即可。</p><p>routes/web.php</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">.</span></span>
<span class="line"><span style="color:#babed8;">.</span></span>
<span class="line"><span style="color:#babed8;">.</span></span>
<span class="line"><span style="color:#babed8;">Route::get(&#39;logs&#39;, &#39;\\Rap2hpoutre\\LaravelLogViewer\\LogViewerController@index&#39;);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>添加路由 logs，访问 larabbs.test/logs 。</p><h2 id="展示并访问-非-log-结尾的日志文件" tabindex="-1">展示并访问 非 <code>.log</code> 结尾的日志文件 <a class="header-anchor" href="#展示并访问-非-log-结尾的日志文件" aria-label="Permalink to &quot;展示并访问 非 \`.log\` 结尾的日志文件&quot;">​</a></h2><ul><li>发布配置文件</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">php artisan vendor:publish --provider=&quot;Rap2hpoutre\\LaravelLogViewer\\LaravelLogViewerServiceProvider&quot;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><ul><li>修改 <code>config/logviewer.php</code> 文件 <code>pattern</code> 参数为你想要的 文件格式即可</li></ul><blockquote><p>默认匹配格式 为 <code>.log</code> ，当 想匹配 <code>laravel.log.1</code> 时，将 参数<code>pattern</code> 设置为 <code>*.log*</code>即可</p></blockquote>`,18),p=[s];function t(n,c,i,d,h,g){return a(),l("div",null,p)}const b=e(r,[["render",t]]);export{v as __pageData,b as default};
