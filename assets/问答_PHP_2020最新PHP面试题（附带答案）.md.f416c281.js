import{_ as p,o as n,c as e,x as a,a as l,Q as s}from"./chunks/framework.aaef0e9b.js";const B=JSON.parse('{"title":"2020最新PHP面试题（附带答案）","description":"","frontmatter":{},"headers":[],"relativePath":"问答/PHP/2020最新PHP面试题（附带答案）.md","lastUpdated":1683280071000}'),t={name:"问答/PHP/2020最新PHP面试题（附带答案）.md"},o=s(`<h1 id="_2020最新php面试题-附带答案" tabindex="-1"><a href="https://zhuanlan.zhihu.com/p/107883599?utm_source=wechat_session" target="_blank" rel="noreferrer">2020最新PHP面试题（附带答案）</a> <a class="header-anchor" href="#_2020最新php面试题-附带答案" aria-label="Permalink to &quot;[2020最新PHP面试题（附带答案）](https://zhuanlan.zhihu.com/p/107883599?utm_source=wechat_session)&quot;">​</a></h1><h2 id="_1-什么事面向对象-主要特征是什么" tabindex="-1">1. 什么事面向对象？主要特征是什么？ <a class="header-anchor" href="#_1-什么事面向对象-主要特征是什么" aria-label="Permalink to &quot;1. 什么事面向对象？主要特征是什么？&quot;">​</a></h2><p>面向对象是程序的一种设计方式，它利于提高程序的重用性，使程序结构更加清晰。主要特征：封装、继承、多态。</p><h2 id="_2-session-与-cookie的区别是什么-请从协议-产生的原因与作用说明" tabindex="-1">2. SESSION 与 COOKIE的区别是什么，请从协议，产生的原因与作用说明? <a class="header-anchor" href="#_2-session-与-cookie的区别是什么-请从协议-产生的原因与作用说明" aria-label="Permalink to &quot;2. SESSION 与 COOKIE的区别是什么，请从协议，产生的原因与作用说明?&quot;">​</a></h2><p>1、http无状态协议，不能区分用户是否是从同一个网站上来的，同一个用户请求不同的页面不能看做是同一个用户。</p><p>2、SESSION存储在服务器端，COOKIE保存在客户端。Session比较安全，cookie用某些手段可以修改，不安全。Session依赖于cookie进行传递。</p><p>禁用cookie后，session不能正常使用。Session的缺点：保存在服务器端，每次读取都从服务器进行读取，对服务器有资源消耗。Session保存在服务器端的文件或数据库中，默认保存在文件中，文件路径由php配置文件的session.save_path指定。Session文件是公有的。</p><h2 id="_3-http-状态中302、403、-500代码含义" tabindex="-1">3. HTTP 状态中302、403、 500代码含义？ <a class="header-anchor" href="#_3-http-状态中302、403、-500代码含义" aria-label="Permalink to &quot;3. HTTP 状态中302、403、 500代码含义？&quot;">​</a></h2><p>一二三四五原则: 一. 消息系列 二 成功系列 三. 重定向系列 四. 请求错误系列 五. 服务器端错误系列</p><p>302:临时转移成功，请求的内容已转移到新位置 403:禁止访问 500:服务器内部错误 401代表未授权。</p><h2 id="_4-linux-下建立压缩包-解压缩包的命令" tabindex="-1">4. Linux 下建立压缩包，解压缩包的命令 <a class="header-anchor" href="#_4-linux-下建立压缩包-解压缩包的命令" aria-label="Permalink to &quot;4. Linux 下建立压缩包，解压缩包的命令&quot;">​</a></h2><p>Tar.gz:<br> 打包: tar czf file.tar.gz file.txt<br> 解压: tar xzf file.tar.gz</p><p>Bz2:<br> 打包: bzip2 [-k] 文件<br> 解压: bunzip2 [-k] 文件</p><p>Gzip（只对文件，不保留原文件）<br> 打包: gzip file1.txt<br> 解压: gunzip file1.txt.gz</p><p>Zip: -r 对目录<br> 打包: zip file1.zip file1.txt<br> 解压: unzip file1.zip</p><h2 id="_5-请写出数据类型-int-char-varchar-datetime-text-的意思-请问-varchar-和-char有什么区别" tabindex="-1">5. 请写出数据类型(int char varchar datetime text)的意思；请问 varchar 和 char有什么区别？ <a class="header-anchor" href="#_5-请写出数据类型-int-char-varchar-datetime-text-的意思-请问-varchar-和-char有什么区别" aria-label="Permalink to &quot;5. 请写出数据类型(int char varchar datetime text)的意思；请问 varchar 和 char有什么区别？&quot;">​</a></h2><p>Int 整数 char 定长字符 Varchar 变长字符 Datetime 日期时间型 Text 文本型</p><p>Varchar 与char的区别：<br> char是固定长度的字符类型，分配多少空间，就占用多长空间。 Varchar是可变长度的字符类型，内容有多大就占用多大的空间，能有效节省空间。 由于varchar类型是可变的，所以在数据长度改变的时，服务器要进行额外的操作，所以效率比char类型低。</p><h2 id="_6-myisam-和-innodb-的基本区别-索引结构如何实现" tabindex="-1">6. MyISAM 和 InnoDB 的基本区别？索引结构如何实现？ <a class="header-anchor" href="#_6-myisam-和-innodb-的基本区别-索引结构如何实现" aria-label="Permalink to &quot;6. MyISAM 和 InnoDB 的基本区别？索引结构如何实现？&quot;">​</a></h2><p>MyISAM类型不支持事务，表锁，易产生碎片，要经常优化，读写速度较快，而InnoDB类型支持事务，行锁，有崩溃恢复能力。读写速度比MyISAM慢。</p><p>创建索引：alert table tablename add index (<code>字段名</code>)</p><h2 id="_7-不使用cookie向客户端发送一个cookie" tabindex="-1">7. 不使用cookie向客户端发送一个cookie. <a class="header-anchor" href="#_7-不使用cookie向客户端发送一个cookie" aria-label="Permalink to &quot;7. 不使用cookie向客户端发送一个cookie.&quot;">​</a></h2><p>理解：session_start（）开启时，生成一个常量 SID，当COOKIE开启时，这个常量为空，当COOKIE关闭时，这个常量中存储了PHPSESSID的值。通过在URL后加一个SID参数来传递SESSIONID的值，从而使客户端页面可以使用SESSION里面的值。 当客户端开启COOKIE和服务器端开启SESSION时。 浏览器第一次请求，服务器会向浏览器端发送一个COOKIE里面存储SESSIONID. 当浏览器第二次请求时，会把已存在…… 【未完待续】</p><h2 id="_8-isset-和-empty-区别" tabindex="-1">8. isset() 和 empty() 区别 <a class="header-anchor" href="#_8-isset-和-empty-区别" aria-label="Permalink to &quot;8. isset() 和 empty() 区别&quot;">​</a></h2><p>Isset判断变量是否存在，可以传入多个变量，若其中一个变量不存在则返回假，empty判断变量是否为空为假，只可传一个变量，如果为空为假则返回真。</p><h2 id="_9-如何在页面之间传递变量-至少两种方式" tabindex="-1">9. 如何在页面之间传递变量(至少两种方式) ? <a class="header-anchor" href="#_9-如何在页面之间传递变量-至少两种方式" aria-label="Permalink to &quot;9. 如何在页面之间传递变量(至少两种方式) ?&quot;">​</a></h2><p>GET,POST,COOKIE,SESSION，隐藏表单</p><h2 id="_1-写出匹配url的正则表达式" tabindex="-1">1. 写出匹配URL的正则表达式. <a class="header-anchor" href="#_1-写出匹配url的正则表达式" aria-label="Permalink to &quot;1. 写出匹配URL的正则表达式.&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">/^(https?|ftps?):\\/\\/(www)\\.([^\\.\\/]+)\\.(com|cn|org)(\\/[\\w-\\.\\/\\?\\%\\&amp;\\=]*)?/i</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_2-请写出常见的排序算法-并用php实现冒泡排序-将数组-a-array-按照从小到大的方式进行排序。" tabindex="-1">2. 请写出常见的排序算法，并用PHP实现冒泡排序，将数组$a = array()按照从小到大的方式进行排序。 <a class="header-anchor" href="#_2-请写出常见的排序算法-并用php实现冒泡排序-将数组-a-array-按照从小到大的方式进行排序。" aria-label="Permalink to &quot;2. 请写出常见的排序算法，并用PHP实现冒泡排序，将数组$a = array()按照从小到大的方式进行排序。&quot;">​</a></h2><p>常见的排序算法: 冒泡排序法、快速排序法、简单选择排序法、堆排序法、直接插入排序法、希尔排序法、合并排序法。</p><p>冒泡排序法的基本思想是：对待排序记录关键字从后往前（逆序）进行多遍扫描，当发现相邻两个关键字的次序与排序要求的规则不符时，就将这两个记录进行交换。这样，关键字较小的记录将逐渐从后面向前面移动，就象气泡在水中向上浮一样，所以该算法也称为气泡排序法。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">// 冒泡排序法</span></span>
<span class="line"><span style="color:#babed8;">function mysort($arr){</span></span>
<span class="line"><span style="color:#babed8;">    for($i = 0; $i &lt; count($arr); $i++){</span></span>
<span class="line"><span style="color:#babed8;">        for($j = 0; $j &lt; count($arr) -1 - $i; $j++){</span></span>
<span class="line"><span style="color:#babed8;">            if ($arr[$j] &gt; $arr[$j + 1]) {</span></span>
<span class="line"><span style="color:#babed8;">                $temp = $arr[$j];</span></span>
<span class="line"><span style="color:#babed8;">                $arr[$j] = $arr[$j + 1];</span></span>
<span class="line"><span style="color:#babed8;">                $arr[$j + 1] = $temp;</span></span>
<span class="line"><span style="color:#babed8;">            }</span></span>
<span class="line"><span style="color:#babed8;">        }</span></span>
<span class="line"><span style="color:#babed8;">    }</span></span>
<span class="line"><span style="color:#babed8;">    return $arr;</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;">$arr=array(3,2,1);</span></span>
<span class="line"><span style="color:#babed8;">print_r(mysort($arr));</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_3-请说明-php-中传值与传引用的区别。什么时候传值什么时候传引用" tabindex="-1">3. 请说明 PHP 中传值与传引用的区别。什么时候传值什么时候传引用？ <a class="header-anchor" href="#_3-请说明-php-中传值与传引用的区别。什么时候传值什么时候传引用" aria-label="Permalink to &quot;3. 请说明 PHP 中传值与传引用的区别。什么时候传值什么时候传引用？&quot;">​</a></h2><p>按值传递：函数范围内对值的任何改变在函数外部都会被忽略</p><p>按引用传递：函数范围内对值的任何改变在函数外部也能反映出这些修改</p><p>优缺点：按值传递时，php必须复制值。特别是对于大型的字符串和对象来说，这将会是一个代价很大的操作。按引用传递则不需要复制值，对于性能提高很有好处。</p><h2 id="在php中error-reporting这个函数有什么作用" tabindex="-1">在PHP中error_reporting这个函数有什么作用？ <a class="header-anchor" href="#在php中error-reporting这个函数有什么作用" aria-label="Permalink to &quot;在PHP中error_reporting这个函数有什么作用？&quot;">​</a></h2><p>设置 PHP 的报错级别并返回当前级别。</p><h2 id="请用正则表达式-regular-expression-写一个函数验证电子邮件的格式是否正确。" tabindex="-1">请用正则表达式（Regular Expression）写一个函数验证电子邮件的格式是否正确。 <a class="header-anchor" href="#请用正则表达式-regular-expression-写一个函数验证电子邮件的格式是否正确。" aria-label="Permalink to &quot;请用正则表达式（Regular Expression）写一个函数验证电子邮件的格式是否正确。&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">if(isset($_POST[&#39;action&#39;]) &amp;&amp; $_POST[&#39;action&#39;]== &#39;submitted&#39;){</span></span>
<span class="line"><span style="color:#babed8;"> $email=$_POST[&#39;email&#39;];</span></span>
<span class="line"><span style="color:#babed8;"> if(!preg_match(&quot;/^[0-9a-zA-Z-]+@[0-9a-zA-Z-]+(\\.[0-9a-zA-Z-]+){1,3}$/&quot;, $email)){</span></span>
<span class="line"><span style="color:#babed8;">  echo &#39;电子邮件检测失败&#39;;</span></span>
<span class="line"><span style="color:#babed8;"> }else{</span></span>
<span class="line"><span style="color:#babed8;">  echo &#39;电子邮件检测成功&#39;;</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="使用php描述快速排序算法-对象可以是一个数组" tabindex="-1">使用PHP描述快速排序算法，对象可以是一个数组? <a class="header-anchor" href="#使用php描述快速排序算法-对象可以是一个数组" aria-label="Permalink to &quot;使用PHP描述快速排序算法，对象可以是一个数组?&quot;">​</a></h2><p>原理:快速排序使用分治策略来把待排序数据序列分为两个子序列，具体步骤为：<br> （1）从数列中挑出一个元素，称该元素为“基准”。<br> （2）扫描一遍数列，将所有比“基准”小的元素排在基准前面，所有比“基准”大的元素排在基准后面。<br> （3）通过递归，将各子序列划分为更小的序列，直到把小于基准值元素的子数列和大于基准值元素的子数列排序。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">//快速排序（数组排序）</span></span>
<span class="line"><span style="color:#babed8;">function quickSort($arr){</span></span>
<span class="line"><span style="color:#babed8;">    $num = count($arr);</span></span>
<span class="line"><span style="color:#babed8;">    $l = $r = 0;</span></span>
<span class="line"><span style="color:#babed8;">    for($i = 1; $i &lt; $num; $i ++){</span></span>
<span class="line"><span style="color:#babed8;">        if ($arr[$i] &lt; $arr[0]){</span></span>
<span class="line"><span style="color:#babed8;">            $left[] = $arr[$i];</span></span>
<span class="line"><span style="color:#babed8;">            $l++;</span></span>
<span class="line"><span style="color:#babed8;">        } else {</span></span>
<span class="line"><span style="color:#babed8;">            $right[] = $arr[$i];</span></span>
<span class="line"><span style="color:#babed8;">            $r++;</span></span>
<span class="line"><span style="color:#babed8;">        }</span></span>
<span class="line"><span style="color:#babed8;">    }</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">    if ($l &gt; 1){</span></span>
<span class="line"><span style="color:#babed8;">        $left = quickSort($left);</span></span>
<span class="line"><span style="color:#babed8;">    }</span></span>
<span class="line"><span style="color:#babed8;">    $new_arr = $left;</span></span>
<span class="line"><span style="color:#babed8;">    $new_arr[] = $arr[0];</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">    if ($r &gt; 1) {</span></span>
<span class="line"><span style="color:#babed8;">        $right = quickSort($right);        </span></span>
<span class="line"><span style="color:#babed8;">    }</span></span>
<span class="line"><span style="color:#babed8;">    for($i = 0; $i &lt; $r; $i++) {</span></span>
<span class="line"><span style="color:#babed8;">        $new_arr[] = $right[$i];</span></span>
<span class="line"><span style="color:#babed8;">    }</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">    return $new_arr;</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="使用php描述顺序查找和二分查找-也叫做折半查找-算法-顺序查找必须考虑效率-对象可以是一个有序数组" tabindex="-1">使用PHP描述顺序查找和二分查找（也叫做折半查找）算法，顺序查找必须考虑效率，对象可以是一个有序数组 <a class="header-anchor" href="#使用php描述顺序查找和二分查找-也叫做折半查找-算法-顺序查找必须考虑效率-对象可以是一个有序数组" aria-label="Permalink to &quot;使用PHP描述顺序查找和二分查找（也叫做折半查找）算法，顺序查找必须考虑效率，对象可以是一个有序数组&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">//二分查找（数组里查找某个元素）</span></span>
<span class="line"><span style="color:#babed8;">function bin_sch($array, $low, $high, $k){</span></span>
<span class="line"><span style="color:#babed8;"> if ($low &lt;= $high){</span></span>
<span class="line"><span style="color:#babed8;">  $mid = intval(($low+$high)/2);</span></span>
<span class="line"><span style="color:#babed8;">  if ($array[$mid] == $k){</span></span>
<span class="line"><span style="color:#babed8;">   return $mid;</span></span>
<span class="line"><span style="color:#babed8;">  }elseif ($k &lt; $array[$mid]){</span></span>
<span class="line"><span style="color:#babed8;">   return bin_sch($array, $low, $mid-1, $k);</span></span>
<span class="line"><span style="color:#babed8;">  }else{</span></span>
<span class="line"><span style="color:#babed8;">   return bin_sch($array, $mid+1, $high, $k);</span></span>
<span class="line"><span style="color:#babed8;">  }</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;"> return -1;</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">//顺序查找（数组里查找某个元素）</span></span>
<span class="line"><span style="color:#babed8;">function seq_sch($array, $n, $k){</span></span>
<span class="line"><span style="color:#babed8;"> $array[$n] = $k;</span></span>
<span class="line"><span style="color:#babed8;"> for($i=0; $i&lt;$n; $i++){</span></span>
<span class="line"><span style="color:#babed8;">  if($array[$i]==$k){</span></span>
<span class="line"><span style="color:#babed8;">   break;</span></span>
<span class="line"><span style="color:#babed8;">  }</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;"> if ($i&lt;$n){</span></span>
<span class="line"><span style="color:#babed8;">  return $i;</span></span>
<span class="line"><span style="color:#babed8;"> }else{</span></span>
<span class="line"><span style="color:#babed8;">  return -1;</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="写一个二维数组排序算法函数-能够具有通用性-可以调用php内置函数-array-multisort" tabindex="-1">写一个二维数组排序算法函数，能够具有通用性，可以调用php内置函数(array_multisort()) <a class="header-anchor" href="#写一个二维数组排序算法函数-能够具有通用性-可以调用php内置函数-array-multisort" aria-label="Permalink to &quot;写一个二维数组排序算法函数，能够具有通用性，可以调用php内置函数(array_multisort())&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">//二维数组排序， $arr是数据，$keys是排序的健值，$order是排序规则，1是升序，0是降序</span></span>
<span class="line"><span style="color:#babed8;">function array_sort($arr, $keys, $order=0) {</span></span>
<span class="line"><span style="color:#babed8;"> if (!is_array($arr)) {</span></span>
<span class="line"><span style="color:#babed8;">  return false;</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;"> $keysvalue = array();</span></span>
<span class="line"><span style="color:#babed8;"> foreach($arr as $key =&gt; $val) {</span></span>
<span class="line"><span style="color:#babed8;">  $keysvalue[$key] = $val[$keys];</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;"> if($order == 0){</span></span>
<span class="line"><span style="color:#babed8;">  asort($keysvalue);</span></span>
<span class="line"><span style="color:#babed8;"> }else {</span></span>
<span class="line"><span style="color:#babed8;">  arsort($keysvalue);</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;"> reset($keysvalue);</span></span>
<span class="line"><span style="color:#babed8;"> foreach($keysvalue as $key =&gt; $vals) {</span></span>
<span class="line"><span style="color:#babed8;">  $keysort[$key] = $key;</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;"> $new_array = array();</span></span>
<span class="line"><span style="color:#babed8;"> foreach($keysort as $key =&gt; $val) {</span></span>
<span class="line"><span style="color:#babed8;">  $new_array[$key] = $arr[$val];</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;"> return $new_array;</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="请以空格作为间隔-拆分字符串-apple-orange-banana-strawberry-组成数组-fruit-数组中所有元素都用小写字母-并按照字母先后次序排序" tabindex="-1">请以空格作为间隔，拆分字符串’Apple Orange Banana Strawberry’,组成数组$fruit，数组中所有元素都用小写字母，并按照字母先后次序排序 <a class="header-anchor" href="#请以空格作为间隔-拆分字符串-apple-orange-banana-strawberry-组成数组-fruit-数组中所有元素都用小写字母-并按照字母先后次序排序" aria-label="Permalink to &quot;请以空格作为间隔，拆分字符串’Apple Orange Banana Strawberry’,组成数组$fruit，数组中所有元素都用小写字母，并按照字母先后次序排序&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">class sort { </span></span>
<span class="line"><span style="color:#babed8;"> private $str; </span></span>
<span class="line"><span style="color:#babed8;"> public function __construct($str) { </span></span>
<span class="line"><span style="color:#babed8;">  $this-&gt;str=strtolower($str); </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> private function explodes() { </span></span>
<span class="line"><span style="color:#babed8;">  if(empty($this-&gt;str)) return array(); </span></span>
<span class="line"><span style="color:#babed8;">  $arr=explode(&quot; &quot;,$this-&gt;str); </span></span>
<span class="line"><span style="color:#babed8;">  return is_array($arr)?$arr:array($arr); </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> public function sort() { </span></span>
<span class="line"><span style="color:#babed8;">  $explode=$this-&gt;explodes(); </span></span>
<span class="line"><span style="color:#babed8;">  sort($explode); </span></span>
<span class="line"><span style="color:#babed8;">  return $explode; </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;">} </span></span>
<span class="line"><span style="color:#babed8;">$str=&#39;Apple Orange Banana Strawberry&#39;; </span></span>
<span class="line"><span style="color:#babed8;">$sortob=new sort($str); </span></span>
<span class="line"><span style="color:#babed8;">var_dump($sortob-&gt;sort());</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div>`,51),i={id:"对于用户输入一串字符串string中只能包含大于0的数字和英文逗号-请用正则-表达式验证-对于不符合要求的-string返回出错信息",tabindex:"-1"},r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},c={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"11.646ex",height:"2.161ex",role:"img",focusable:"false",viewBox:"0 -750 5147.7 955","aria-hidden":"true"},d=s('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(469,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(830,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1281,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1626,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2226,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2703,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3147.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">要</text></g><g data-mml-node="mi" transform="translate(4147.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">求</text></g></g></g>',1),b=[d],h=a("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("mi",null,"s"),a("mi",null,"t"),a("mi",null,"r"),a("mi",null,"i"),a("mi",null,"n"),a("mi",null,"g"),a("mo",null,","),a("mi",{mathvariant:"normal"},"要"),a("mi",{mathvariant:"normal"},"求")])],-1),u=a("a",{class:"header-anchor",href:"#对于用户输入一串字符串string中只能包含大于0的数字和英文逗号-请用正则-表达式验证-对于不符合要求的-string返回出错信息","aria-label":'Permalink to "对于用户输入一串字符串$string,要求$string中只能包含大于0的数字和英文逗号，请用正则 表达式验证，对于不符合要求的$string返回出错信息"'},"​",-1),y=s(`<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">class regx { </span></span>
<span class="line"><span style="color:#babed8;"> public static function check($str) { </span></span>
<span class="line"><span style="color:#babed8;"> if(preg_match(&quot;/^([1-9,])+$/&quot;,$str)) { </span></span>
<span class="line"><span style="color:#babed8;">  return true; </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> return false; </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;">} </span></span>
<span class="line"><span style="color:#babed8;">$str=&quot;12345,6&quot;; </span></span>
<span class="line"><span style="color:#babed8;">if(regx::check($str)) { </span></span>
<span class="line"><span style="color:#babed8;">echo &quot;suc&quot;; </span></span>
<span class="line"><span style="color:#babed8;">} else { </span></span>
<span class="line"><span style="color:#babed8;">echo &quot;fail&quot;; </span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="请写一段程序-在服务器创建一个文件fruit-dat-将试题3中得到的数组写入到改文件中-然后写一段程序从文件中读取并还原数组" tabindex="-1">请写一段程序，在服务器创建一个文件fruit.dat,将试题3中得到的数组写入到改文件中，然后写一段程序从文件中读取并还原数组 <a class="header-anchor" href="#请写一段程序-在服务器创建一个文件fruit-dat-将试题3中得到的数组写入到改文件中-然后写一段程序从文件中读取并还原数组" aria-label="Permalink to &quot;请写一段程序，在服务器创建一个文件fruit.dat,将试题3中得到的数组写入到改文件中，然后写一段程序从文件中读取并还原数组&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">class sort { </span></span>
<span class="line"><span style="color:#babed8;"> private $str; </span></span>
<span class="line"><span style="color:#babed8;"> public function __construct($str) { </span></span>
<span class="line"><span style="color:#babed8;">  $this-&gt;str=strtolower($str); </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> private function explodes(){ </span></span>
<span class="line"><span style="color:#babed8;">  if(empty($this-&gt;str)) return array(); </span></span>
<span class="line"><span style="color:#babed8;">  $arr=explode(&quot; &quot;,$this-&gt;str); </span></span>
<span class="line"><span style="color:#babed8;">  return is_array($arr)?$arr:array($arr); </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> public function sort() { </span></span>
<span class="line"><span style="color:#babed8;">  $explode=$this-&gt;explodes(); </span></span>
<span class="line"><span style="color:#babed8;">  sort($explode); </span></span>
<span class="line"><span style="color:#babed8;">  return $explode; </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;">} </span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">class file { </span></span>
<span class="line"><span style="color:#babed8;"> private $sort=null; </span></span>
<span class="line"><span style="color:#babed8;"> private $filepath; </span></span>
<span class="line"><span style="color:#babed8;"> public function __construct($arrobj,$path) { </span></span>
<span class="line"><span style="color:#babed8;">  $this-&gt;sort=$arrobj; </span></span>
<span class="line"><span style="color:#babed8;">  $this-&gt;filepath=$path; </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> private function getresource($filename,$mode) { </span></span>
<span class="line"><span style="color:#babed8;">  return fopen($this-&gt;filepath.$filename,$mode); </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> private function closeresource($resource) { </span></span>
<span class="line"><span style="color:#babed8;">  fclose($resource); </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> public function savefile($filename) { </span></span>
<span class="line"><span style="color:#babed8;">  $arr=$this-&gt;sort-&gt;sort(); </span></span>
<span class="line"><span style="color:#babed8;">  $fopen=$this-&gt;getresource($filename,&quot;a+&quot;); </span></span>
<span class="line"><span style="color:#babed8;">  if(!$fopen){ </span></span>
<span class="line"><span style="color:#babed8;">   echo &quot;文件打开失败！&quot;;</span></span>
<span class="line"><span style="color:#babed8;">   exit; </span></span>
<span class="line"><span style="color:#babed8;">  } </span></span>
<span class="line"><span style="color:#babed8;">  var_dump($arr); </span></span>
<span class="line"><span style="color:#babed8;">  foreach($arr as $key=&gt;$value) { </span></span>
<span class="line"><span style="color:#babed8;">   fwrite($fopen,$value.&quot;\\n&quot;); </span></span>
<span class="line"><span style="color:#babed8;">  } </span></span>
<span class="line"><span style="color:#babed8;">  $this-&gt;closeresource($fopen); </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> public function readfile($filename) { </span></span>
<span class="line"><span style="color:#babed8;">  $this-&gt;savefile($filename); </span></span>
<span class="line"><span style="color:#babed8;">  $fopen=$this-&gt;getresource($filename,&quot;r&quot;); </span></span>
<span class="line"><span style="color:#babed8;">  if(!$fopen){ </span></span>
<span class="line"><span style="color:#babed8;">   echo &quot;文件打开失败！&quot;;exit; </span></span>
<span class="line"><span style="color:#babed8;">  } </span></span>
<span class="line"><span style="color:#babed8;">  $arr=array(); </span></span>
<span class="line"><span style="color:#babed8;">  while(!feof($fopen)) { </span></span>
<span class="line"><span style="color:#babed8;">   $get=fgets($fopen); </span></span>
<span class="line"><span style="color:#babed8;">   if(!empty($get)) </span></span>
<span class="line"><span style="color:#babed8;">    $arr[]=str_replace(&quot;\\n&quot;,&quot;&quot;,$get); </span></span>
<span class="line"><span style="color:#babed8;">  } </span></span>
<span class="line"><span style="color:#babed8;">  $this-&gt;closeresource($fopen); </span></span>
<span class="line"><span style="color:#babed8;"> return $arr; </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;">} </span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">$file=new file(new sort(&#39;Apple Orange Banana Strawberry&#39;),&quot;E:\\\\&quot;); </span></span>
<span class="line"><span style="color:#babed8;">$arr=$file-&gt;readfile(&quot;fruit.dat&quot;); </span></span>
<span class="line"><span style="color:#babed8;">var_dump($arr); </span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="单例模式-创建mysqli数据库链接的单例对象" tabindex="-1">单例模式，创建mysqli数据库链接的单例对象 <a class="header-anchor" href="#单例模式-创建mysqli数据库链接的单例对象" aria-label="Permalink to &quot;单例模式，创建mysqli数据库链接的单例对象&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">class Db { </span></span>
<span class="line"><span style="color:#babed8;"> private static $instance; </span></span>
<span class="line"><span style="color:#babed8;"> public $handle; </span></span>
<span class="line"><span style="color:#babed8;"> Private function __construct($host,$username,$password,$dbname) { </span></span>
<span class="line"><span style="color:#babed8;">  $this-&gt;handle=NULL; </span></span>
<span class="line"><span style="color:#babed8;">  $this-&gt;getcon($host,$username,$password,$dbname); </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> public static function getBb() { </span></span>
<span class="line"><span style="color:#babed8;">  self::$instance=new Db(); </span></span>
<span class="line"><span style="color:#babed8;">  return self::$instance; </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;"> private function getcon($host,$username,$password,$dbname) { </span></span>
<span class="line"><span style="color:#babed8;">  if($this-&gt;handle!=NULL){ </span></span>
<span class="line"><span style="color:#babed8;">   return true; </span></span>
<span class="line"><span style="color:#babed8;">  } </span></span>
<span class="line"><span style="color:#babed8;">  $this-&gt;handle=mysqli_connect($host,$username,$password,$dbname); </span></span>
<span class="line"><span style="color:#babed8;"> } </span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="windows平台-apache-http-server启动失败-排错思路是什么" tabindex="-1">windows平台, Apache Http Server启动失败, 排错思路是什么? <a class="header-anchor" href="#windows平台-apache-http-server启动失败-排错思路是什么" aria-label="Permalink to &quot;windows平台, Apache Http Server启动失败, 排错思路是什么?&quot;">​</a></h2><p>检查apache使用的80端口是否被占用，如果被占用，先停止占用80端口的服务，然后启动apache服务器</p><h2 id="php-session扩展默认将session数据储存在哪里-d" tabindex="-1">PHP session扩展默认将session数据储存在哪里? D <a class="header-anchor" href="#php-session扩展默认将session数据储存在哪里-d" aria-label="Permalink to &quot;PHP session扩展默认将session数据储存在哪里? D&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">A) SQLite Database</span></span>
<span class="line"><span style="color:#babed8;">B) MySQL Database</span></span>
<span class="line"><span style="color:#babed8;">C) Shared Memory</span></span>
<span class="line"><span style="color:#babed8;">D) File System</span></span>
<span class="line"><span style="color:#babed8;">E) Session Server</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="如果你想要自动加载类-下面哪种函数声明是正确的-c" tabindex="-1">如果你想要自动加载类，下面哪种函数声明是正确的 C <a class="header-anchor" href="#如果你想要自动加载类-下面哪种函数声明是正确的-c" aria-label="Permalink to &quot;如果你想要自动加载类，下面哪种函数声明是正确的 C&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">A) function autoload($class_name)</span></span>
<span class="line"><span style="color:#babed8;">B) function __autoload($class_name, $file)</span></span>
<span class="line"><span style="color:#babed8;">C) function __autoload($class_name)</span></span>
<span class="line"><span style="color:#babed8;">D) function _autoload($class_name)</span></span>
<span class="line"><span style="color:#babed8;">E) function autoload($class_name, $file)</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="php程序使用utf-8编码-以下程序输出结果是什么-b" tabindex="-1">PHP程序使用utf-8编码, 以下程序输出结果是什么? B <a class="header-anchor" href="#php程序使用utf-8编码-以下程序输出结果是什么-b" aria-label="Permalink to &quot;PHP程序使用utf-8编码, 以下程序输出结果是什么? B&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">&lt;?php</span></span>
<span class="line"><span style="color:#babed8;">$str = &#39;hello你好世界&#39;;</span></span>
<span class="line"><span style="color:#babed8;">echo strlen($str);</span></span>
<span class="line"><span style="color:#babed8;">?&gt;</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">A) 9 B) 13(gbk) C) 18 D) 17(utf8)</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="你所知道的php数组相关的函数" tabindex="-1">你所知道的php数组相关的函数？ <a class="header-anchor" href="#你所知道的php数组相关的函数" aria-label="Permalink to &quot;你所知道的php数组相关的函数？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#babed8;">array()----创建数组</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_combine()----通过合并两个数组来创建一个新数组</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">range()----创建并返回一个包含指定范围的元素的数组</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">compact()----建立一个数组</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_chunk()----将一个数组分割成多个</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_merge()----把两个或多个数组合并成一个数组</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_slice()----在数组中根据条件取出一段值</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_diff()----返回两个数组的差集数组</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_intersect()----计算数组的交集</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_search()----在数组中搜索给定的值</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_splice()----移除数组的一部分且替代它</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_key_exists()----判断某个数组中是否存在指定的key</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">shuffle()----把数组中的元素按随机顺序重新排列</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_flip()----交换数组中的键和值</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_reverse()----将原数组中的元素顺序翻转，创建新的数组并返回</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">array_unique()----移除数组中重复的值</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="php读取文件内容的几种方法和函数" tabindex="-1">php读取文件内容的几种方法和函数？ <a class="header-anchor" href="#php读取文件内容的几种方法和函数" aria-label="Permalink to &quot;php读取文件内容的几种方法和函数？&quot;">​</a></h2><p>打开文件，然后读取。Fopen() fread()<br> 打开读取一次完成 file_get_contents()</p><h2 id="以下程序-变量str什么值的情况下输入111" tabindex="-1">以下程序，变量str什么值的情况下输入111? <a class="header-anchor" href="#以下程序-变量str什么值的情况下输入111" aria-label="Permalink to &quot;以下程序，变量str什么值的情况下输入111?&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">if( ! $str ) { echo 111; }</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>在$str值为：<code>0，&#39; 0&#39;，false, null, &quot; &quot;</code></p><h2 id="你所知道的php的一些技术-smarty等" tabindex="-1">你所知道的PHP的一些技术（smarty等）？ <a class="header-anchor" href="#你所知道的php的一些技术-smarty等" aria-label="Permalink to &quot;你所知道的PHP的一些技术（smarty等）？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">Smarty,jquery,ajax,memcache,div+css,js,mysqli,pdo,svn,thinkphp,brophp,yii,laravel</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="你所熟悉的php论坛系统-有哪些" tabindex="-1">你所熟悉的PHP论坛系统 有哪些？ <a class="header-anchor" href="#你所熟悉的php论坛系统-有哪些" aria-label="Permalink to &quot;你所熟悉的PHP论坛系统 有哪些？&quot;">​</a></h2><p>Discuz</p><h2 id="你所熟悉的php商城系统-有哪些" tabindex="-1">你所熟悉的PHP商城系统 有哪些？ <a class="header-anchor" href="#你所熟悉的php商城系统-有哪些" aria-label="Permalink to &quot;你所熟悉的PHP商城系统 有哪些？&quot;">​</a></h2><p>Ecshop</p><h2 id="你所熟悉的php开发框架-有哪些" tabindex="-1">你所熟悉的PHP开发框架 有哪些？ <a class="header-anchor" href="#你所熟悉的php开发框架-有哪些" aria-label="Permalink to &quot;你所熟悉的PHP开发框架 有哪些？&quot;">​</a></h2><p>Laravel, ThinkPHP</p><h2 id="说说你对缓存技术的了解" tabindex="-1">说说你对缓存技术的了解？ <a class="header-anchor" href="#说说你对缓存技术的了解" aria-label="Permalink to &quot;说说你对缓存技术的了解？&quot;">​</a></h2><p>1、缓存技术是将动态内容缓存到文件中，在一定时间内访问动态页面直接调用缓存文件，而不必重新访问数据库。<br> 2、使用memcache可以做缓存。</p><h2 id="你所知道的设计模式有哪些" tabindex="-1">你所知道的设计模式有哪些？ <a class="header-anchor" href="#你所知道的设计模式有哪些" aria-label="Permalink to &quot;你所知道的设计模式有哪些？&quot;">​</a></h2><p>工厂模式、策略模式、单元素模式、观察者模式、命令链模式</p><h2 id="说说你对代码管理的了解-常使用那些代码版本控制软件" tabindex="-1">说说你对代码管理的了解？ 常使用那些代码版本控制软件？ <a class="header-anchor" href="#说说你对代码管理的了解-常使用那些代码版本控制软件" aria-label="Permalink to &quot;说说你对代码管理的了解？ 常使用那些代码版本控制软件？&quot;">​</a></h2><p>通常一个项目是由一个团队去开发，每个人将自己写好的代码提交到版本服务器，由项目负责人按照版本进行管理，方便版本的控制，提高开发效率，保证需要时可以回到旧版本。</p><p>常用的版本控制器：SVN,Git</p><h2 id="说说你对svn的了解-优缺点" tabindex="-1">说说你对SVN的了解？优缺点？ <a class="header-anchor" href="#说说你对svn的了解-优缺点" aria-label="Permalink to &quot;说说你对SVN的了解？优缺点？&quot;">​</a></h2><p>SVN是一种版本控制器，程序员开发的代码递交到版本服务器进行集中管理。<br> SVN的优点：代码进行集中管理，版本控制容易，操作比较简单，权限控制方便。<br> 缺点：不能随意修改服务器项目文件夹。</p><h2 id="怎么找到php-ini的路径" tabindex="-1">怎么找到PHP.ini的路径？ <a class="header-anchor" href="#怎么找到php-ini的路径" aria-label="Permalink to &quot;怎么找到PHP.ini的路径？&quot;">​</a></h2><p>一般都在php的安装目录下，或者window系统的windows目录下。</p><h2 id="php加速模式-扩展-php调试模式-工具" tabindex="-1">PHP加速模式/扩展？ PHP调试模式/工具？ <a class="header-anchor" href="#php加速模式-扩展-php调试模式-工具" aria-label="Permalink to &quot;PHP加速模式/扩展？ PHP调试模式/工具？&quot;">​</a></h2><p>Zend Optimizer加速扩展<br> 调试工具：xdebug</p><h2 id="你常用到的mysql命令" tabindex="-1">你常用到的mysql命令？ <a class="header-anchor" href="#你常用到的mysql命令" aria-label="Permalink to &quot;你常用到的mysql命令？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">Show databases</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">Show tables</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">Insert into 表名() values()</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">Update 表名 set 字段=值 where ...</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">Delete from 表名 where ...</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">Select * from 表名 where 条件 order by ... Desc/asc limit ... Group by ... Having ...</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="进入mysql管理命令行的命令" tabindex="-1">进入mysql管理命令行的命令？ <a class="header-anchor" href="#进入mysql管理命令行的命令" aria-label="Permalink to &quot;进入mysql管理命令行的命令？&quot;">​</a></h2><p>Mysql -uroot -p 回车 密码</p><h2 id="show-databases-这个命令的作用" tabindex="-1">show databases; 这个命令的作用？ <a class="header-anchor" href="#show-databases-这个命令的作用" aria-label="Permalink to &quot;show databases; 这个命令的作用？&quot;">​</a></h2><p>显示当前mysql服务器中有哪些数据库</p><h2 id="show-create-database-mysql-这个命令的作用" tabindex="-1">show create database mysql; 这个命令的作用？ <a class="header-anchor" href="#show-create-database-mysql-这个命令的作用" aria-label="Permalink to &quot;show create database mysql; 这个命令的作用？&quot;">​</a></h2><p>显示创建数据库的sql语句</p><h2 id="show-create-table-user-这个命令的作用" tabindex="-1">show create table user; 这个命令的作用？ <a class="header-anchor" href="#show-create-table-user-这个命令的作用" aria-label="Permalink to &quot;show create table user; 这个命令的作用？&quot;">​</a></h2><p>显示创建表的sql语句</p><h2 id="desc-user-这个命令的作用" tabindex="-1">desc user; 这个命令的作用？ <a class="header-anchor" href="#desc-user-这个命令的作用" aria-label="Permalink to &quot;desc user; 这个命令的作用？&quot;">​</a></h2><p>查询user表的结构</p><h2 id="explain-select-from-user-这个命令的作用" tabindex="-1">explain select * from user; 这个命令的作用？ <a class="header-anchor" href="#explain-select-from-user-这个命令的作用" aria-label="Permalink to &quot;explain select * from user; 这个命令的作用？&quot;">​</a></h2><p>获取select相关信息</p><h2 id="show-processlist-这个命令的作用" tabindex="-1">show processlist; 这个命令的作用？ <a class="header-anchor" href="#show-processlist-这个命令的作用" aria-label="Permalink to &quot;show processlist; 这个命令的作用？&quot;">​</a></h2><p>显示哪些线程正在运行</p><h2 id="show-variables-这个命令的作用" tabindex="-1">SHOW VARIABLES; 这个命令的作用？ <a class="header-anchor" href="#show-variables-这个命令的作用" aria-label="Permalink to &quot;SHOW VARIABLES; 这个命令的作用？&quot;">​</a></h2><p>显示系统变量和值</p><h2 id="show-variables-like-conn-这个命令的作用" tabindex="-1">SHOW VARIABLES like ’%conn%’; 这个命令的作用？ <a class="header-anchor" href="#show-variables-like-conn-这个命令的作用" aria-label="Permalink to &quot;SHOW VARIABLES like ’%conn%’; 这个命令的作用？&quot;">​</a></h2><p>显示系统变量名包含conn的值</p><h2 id="left-join-写一个sql语句" tabindex="-1">LEFT JOIN 写一个SQL语句？ <a class="header-anchor" href="#left-join-写一个sql语句" aria-label="Permalink to &quot;LEFT JOIN 写一个SQL语句？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">SELECT A.id,A.class FROM A LEFT JOIN B ON A.cid=B.id</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="in-not-in-exist-not-exist的作用和区别" tabindex="-1">in, not in, exist, not exist的作用和区别？ <a class="header-anchor" href="#in-not-in-exist-not-exist的作用和区别" aria-label="Permalink to &quot;in, not in, exist, not exist的作用和区别？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">in在什么中</span></span>
<span class="line"><span style="color:#babed8;">Not in 不在什么中</span></span>
<span class="line"><span style="color:#babed8;">Exists 存在</span></span>
<span class="line"><span style="color:#babed8;">Not exists 不存在</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="怎么找到数据库的配置文件路径" tabindex="-1">怎么找到数据库的配置文件路径？ <a class="header-anchor" href="#怎么找到数据库的配置文件路径" aria-label="Permalink to &quot;怎么找到数据库的配置文件路径？&quot;">​</a></h2><p>在数据库安装目录下，my.ini</p><h2 id="简述linux下安装php的过程" tabindex="-1">简述Linux下安装PHP的过程？ <a class="header-anchor" href="#简述linux下安装php的过程" aria-label="Permalink to &quot;简述Linux下安装PHP的过程？&quot;">​</a></h2><ul><li>安装软件之前先安装编译工具gcc、gcc-c++</li><li>拷贝源码包，解包解压缩</li><li>Cd /lamp/php进入php目录</li><li>./configure –prefix=/usr/local/php –with-config-file-path=/usr/local/php/etc指定安装目录和配置文件目录</li><li>Make 编译</li><li>Make install安装</li></ul><h2 id="简述linux下安装mysql的过程" tabindex="-1">简述Linux下安装Mysql的过程？ <a class="header-anchor" href="#简述linux下安装mysql的过程" aria-label="Permalink to &quot;简述Linux下安装Mysql的过程？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">Groupadd mysql 添加一个用户组mysql</span></span>
<span class="line"><span style="color:#babed8;">Useradd -g mysql mysql 添加一个mysql用户指定分组为mysql</span></span>
<span class="line"><span style="color:#babed8;">Cd /lamp/mysql 进入mysql目录</span></span>
<span class="line"><span style="color:#babed8;">./configure –prefix=/usr/local/mysql/ –with-extra-charsets=all</span></span>
<span class="line"><span style="color:#babed8;">Make</span></span>
<span class="line"><span style="color:#babed8;">Make all</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="简述linux下安装apache的过程" tabindex="-1">简述Linux下安装apache的过程？ <a class="header-anchor" href="#简述linux下安装apache的过程" aria-label="Permalink to &quot;简述Linux下安装apache的过程？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">Cd /lamp/httpd 进去apache软件目录</span></span>
<span class="line"><span style="color:#babed8;">./configure –prefix=/usr/local/apache2/ –sysconfdir=/etc/httpd/ –with-included-apr</span></span>
<span class="line"><span style="color:#babed8;">Make</span></span>
<span class="line"><span style="color:#babed8;">Make all</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h1 id="html-css-div-javascritp" tabindex="-1">HTML/CSS/DIV/Javascritp： <a class="header-anchor" href="#html-css-div-javascritp" aria-label="Permalink to &quot;HTML/CSS/DIV/Javascritp：&quot;">​</a></h1><h2 id="_1-设计一个页面-4个-div-第一个div-宽960px-居中-第2-4个div-3等分960px" tabindex="-1">1. 设计一个页面(4个 div 第一个div 宽960px 居中;第2-4个div 3等分960px;) <a class="header-anchor" href="#_1-设计一个页面-4个-div-第一个div-宽960px-居中-第2-4个div-3等分960px" aria-label="Permalink to &quot;1. 设计一个页面(4个 div 第一个div 宽960px 居中;第2-4个div 3等分960px;)&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">&lt;style&gt;</span></span>
<span class="line"><span style="color:#babed8;">Body{ Text-align:center; Margin:0; Padding:0; }</span></span>
<span class="line"><span style="color:#babed8;">#box{ Width:960px; Margin:0 auto; }</span></span>
<span class="line"><span style="color:#babed8;">.small{ Width:320px; Float:left; }</span></span>
<span class="line"><span style="color:#babed8;">&lt;/style&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;div id=’box’&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;div class=’small’&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;div class=’small’&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;div class=’small’&gt;&lt;/div&gt;</span></span>
<span class="line"><span style="color:#babed8;">&lt;/div&gt;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="用javascript取得一个input的值-取得一个input的属性" tabindex="-1">用javascript取得一个input的值？取得一个input的属性？ <a class="header-anchor" href="#用javascript取得一个input的值-取得一个input的属性" aria-label="Permalink to &quot;用javascript取得一个input的值？取得一个input的属性？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">document.getElementById(&#39;name&#39;).value;</span></span>
<span class="line"><span style="color:#babed8;">document.getElementById(&#39;name&#39;).type;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="用jquery取得一个input的值-取得一个input的属性" tabindex="-1">用Jquery取得一个input的值？取得一个input的属性？ <a class="header-anchor" href="#用jquery取得一个input的值-取得一个input的属性" aria-label="Permalink to &quot;用Jquery取得一个input的值？取得一个input的属性？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$(&quot;input[name=&#39;aa&#39;]&quot;).val();</span></span>
<span class="line"><span style="color:#babed8;">$(&quot;input[name=&#39;aa&#39;]&quot;).attr(&#39;type&#39;);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="请您写一段ajax提交的js代码-或者写出ajax提交的过程逻辑。" tabindex="-1">请您写一段ajax提交的js代码，或者写出ajax提交的过程逻辑。 <a class="header-anchor" href="#请您写一段ajax提交的js代码-或者写出ajax提交的过程逻辑。" aria-label="Permalink to &quot;请您写一段ajax提交的js代码，或者写出ajax提交的过程逻辑。&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">var xmlhttp;</span></span>
<span class="line"><span style="color:#babed8;">if(window.XMLHttpRquest){</span></span>
<span class="line"><span style="color:#babed8;">    xmlhttp=new XMLHttpRequest();</span></span>
<span class="line"><span style="color:#babed8;">}else if(window.ActiveXObject){</span></span>
<span class="line"><span style="color:#babed8;">    xmlhttp=new ActiveXObject(&#39;Microsoft.XMLHTTP&#39;);</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;">xmlhttp.open(&#39;GET&#39;, &#39;1.php?aa=name&#39;, true);</span></span>
<span class="line"><span style="color:#babed8;">xmlhttp.onreadystatechange=function(){</span></span>
<span class="line"><span style="color:#babed8;">    if(xmlhttp.readyState==4){</span></span>
<span class="line"><span style="color:#babed8;">        if(xmlhttp.status==200){</span></span>
<span class="line"><span style="color:#babed8;">            var text=xmlhttp.responseText;</span></span>
<span class="line"><span style="color:#babed8;">        }</span></span>
<span class="line"><span style="color:#babed8;">    }</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;">xmlhttp.send(null);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="简述cookie的设置及获取过程" tabindex="-1">简述Cookie的设置及获取过程 <a class="header-anchor" href="#简述cookie的设置及获取过程" aria-label="Permalink to &quot;简述Cookie的设置及获取过程&quot;">​</a></h2><p>设置COOKIE的值：<br> Setcookie(名称，值，保存时间，有效域);</p><p>获取值：$_COOKIE[&#39;名称&#39;];</p><h2 id="面向对象中接口和抽象类的区别及应用场景" tabindex="-1">面向对象中接口和抽象类的区别及应用场景? <a class="header-anchor" href="#面向对象中接口和抽象类的区别及应用场景" aria-label="Permalink to &quot;面向对象中接口和抽象类的区别及应用场景?&quot;">​</a></h2><p>1、有抽象方法的类叫做抽象类，抽象类中不一定只有抽象方法，抽象方法必须使用abstract关键字定义。<br> 2、接口中全部是抽象方法,方法不用使用abstract定义。<br> 3、当多个同类的类要设计一个上层，通常设计为抽象类，当多个异构的类要设计一个上层，通常设计为接口。</p><h2 id="用面向对象来实现a对象继承b和c对象" tabindex="-1">用面向对象来实现A对象继承B和C对象 <a class="header-anchor" href="#用面向对象来实现a对象继承b和c对象" aria-label="Permalink to &quot;用面向对象来实现A对象继承B和C对象&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">Interface B{ ... }</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">Interface C{ ... }</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">Class A implements B,C{ ... }</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="写出smarty模板引擎中你最常用的关键词" tabindex="-1">写出Smarty模板引擎中你最常用的关键词 <a class="header-anchor" href="#写出smarty模板引擎中你最常用的关键词" aria-label="Permalink to &quot;写出Smarty模板引擎中你最常用的关键词&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">Assign Display Foreach</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">Section Loop Item</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">$smarty Now Const get</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="增加一个字段性别sex-写出修改语句" tabindex="-1">增加一个字段性别sex，写出修改语句 <a class="header-anchor" href="#增加一个字段性别sex-写出修改语句" aria-label="Permalink to &quot;增加一个字段性别sex，写出修改语句&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">Alert table user add sex enum(&#39;0&#39;, &#39;1&#39;);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="查询出年龄介于20岁到30岁之间的用户" tabindex="-1">查询出年龄介于20岁到30岁之间的用户 <a class="header-anchor" href="#查询出年龄介于20岁到30岁之间的用户" aria-label="Permalink to &quot;查询出年龄介于20岁到30岁之间的用户&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">Select * from user where age&gt;20 and age&lt;30</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="如果是一个web频繁访问的查询-上题的查询如何优化" tabindex="-1">如果是一个Web频繁访问的查询，上题的查询如何优化？ <a class="header-anchor" href="#如果是一个web频繁访问的查询-上题的查询如何优化" aria-label="Permalink to &quot;如果是一个Web频繁访问的查询，上题的查询如何优化？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">可对where后面的字段 age 建立索引，也可对语句建立存储过程。</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="echo-print-print-r-的区别" tabindex="-1">echo(),print(),print_r()的区别？ <a class="header-anchor" href="#echo-print-print-r-的区别" aria-label="Permalink to &quot;echo(),print(),print_r()的区别？&quot;">​</a></h2><ul><li>Echo，print是PHP语句, print_r是函数,</li><li>Print()只能打印出简单类型变量的值(如int,string)，有返回值。</li><li>print_r()可以打印出复杂类型变量的值(如数组,对象)</li><li>echo 输出一个或者多个字符串，无返回值</li></ul><h2 id="什么是模板技术、能够使html和php分离开使用的模板" tabindex="-1">什么是模板技术、能够使HTML和PHP分离开使用的模板？ <a class="header-anchor" href="#什么是模板技术、能够使html和php分离开使用的模板" aria-label="Permalink to &quot;什么是模板技术、能够使HTML和PHP分离开使用的模板？&quot;">​</a></h2><p>模板技术就是使程序的逻辑代码和界面分开的技术。</p><p>能够使HTML和PHP分开的模板有：Smarty、Template、PHPlib Template、FastTemplate</p><h2 id="对于大流量的网站-您采用什么样的方法来解决访问量问题" tabindex="-1">对于大流量的网站,您采用什么样的方法来解决访问量问题? <a class="header-anchor" href="#对于大流量的网站-您采用什么样的方法来解决访问量问题" aria-label="Permalink to &quot;对于大流量的网站,您采用什么样的方法来解决访问量问题?&quot;">​</a></h2><p>优化程序，优化数据库，如果程序和数据库已经最优化，使用以下解决方法：</p><ul><li>1、确定当前服务器设备是否满足流量需求。</li><li>2、使用Memcache缓存技术，把动态内容缓存到文件中，动态网页直接调用这些文件，而不必再访问数据库。</li><li>3、禁止外部盗链，图片和文件外部盗链会给服务器带来大量的负载压力，可以通过refer来禁止外部盗链，或者使用apache来配置禁止盗链。</li><li>4、控制大文件的下载，大文件的下载对于非SCSI硬盘来说会占用大量的资源，导致服务器的响应能力下降。</li><li>5、使用不同的主机分流主要流量，使服务器均衡负载。</li><li>6、使用流量统计软件统计分析网站流量，可以知道哪些地方耗费了大量的流量，哪些页面需要再进行优化。</li></ul><h2 id="mysql-fetch-row-和-mysql-fetch-array-之间有什么区别" tabindex="-1">mysql_fetch_row() 和 mysql_fetch_array() 之间有什么区别? <a class="header-anchor" href="#mysql-fetch-row-和-mysql-fetch-array-之间有什么区别" aria-label="Permalink to &quot;mysql_fetch_row() 和 mysql_fetch_array() 之间有什么区别?&quot;">​</a></h2><p>Mysql_fetch_row() 是从结果集中取出一行作为枚举数组，mysql_fetch_array() 是从结果集中取出一行作为索引数组或关联数组或两种方式都有。</p><h2 id="实现中文字串截取无乱码的方法" tabindex="-1">实现中文字串截取无乱码的方法 <a class="header-anchor" href="#实现中文字串截取无乱码的方法" aria-label="Permalink to &quot;实现中文字串截取无乱码的方法&quot;">​</a></h2><p>Mb_substr();</p><h2 id="用php写出显示客户端ip与服务器ip的代码" tabindex="-1">用PHP写出显示客户端IP与服务器IP的代码 <a class="header-anchor" href="#用php写出显示客户端ip与服务器ip的代码" aria-label="Permalink to &quot;用PHP写出显示客户端IP与服务器IP的代码&quot;">​</a></h2><p>获取客户端IP：<code>$_SERVER(&quot;REMOTE_ADDR&quot;);</code><br> 获取服务器端IP：<code>$_SERVER[&quot;SERVER_ADDR&quot;];</code></p><h2 id="有一个网页地址-比如php开发资源网主页-http-www-phpres-com-index-html-如何得到它的内容" tabindex="-1">有一个网页地址, 比如PHP开发资源网主页: <code>http://www.phpres.com/index.html</code> ,如何得到它的内容? <a class="header-anchor" href="#有一个网页地址-比如php开发资源网主页-http-www-phpres-com-index-html-如何得到它的内容" aria-label="Permalink to &quot;有一个网页地址, 比如PHP开发资源网主页: \`http://www.phpres.com/index.html\` ,如何得到它的内容?&quot;">​</a></h2><p>获取网页内容：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$url = &#39;http://www.phpres.com/index.html&#39;;</span></span>
<span class="line"><span style="color:#babed8;">$str = file_get_contents($url);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>或</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$ch=curl_init();</span></span>
<span class="line"><span style="color:#babed8;">curl_setopt($ch,CURLOPT_URL,’’);</span></span>
<span class="line"><span style="color:#babed8;">curl_setopt($ch,CURLOPT_HEADER,0);</span></span>
<span class="line"><span style="color:#babed8;">curl_exec($ch);</span></span>
<span class="line"><span style="color:#babed8;">curl_close($ch);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="请写一个函数验证电子邮件的格式是否正确" tabindex="-1">请写一个函数验证电子邮件的格式是否正确 <a class="header-anchor" href="#请写一个函数验证电子邮件的格式是否正确" aria-label="Permalink to &quot;请写一个函数验证电子邮件的格式是否正确&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">function checkemail($email){</span></span>
<span class="line"><span style="color:#babed8;">    echo preg_match(&#39;/^[0-9a-zA-Z-]+@[0-9a-zA-Z-]+\\.[0-9a-zA-Z]+$/&#39;, $email) ? &#39;email格式正确&#39; : &#39;email格式不正确&#39;;</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="简述如何得到当前执行脚本路径-包括所得到参数" tabindex="-1">简述如何得到当前执行脚本路径，包括所得到参数 <a class="header-anchor" href="#简述如何得到当前执行脚本路径-包括所得到参数" aria-label="Permalink to &quot;简述如何得到当前执行脚本路径，包括所得到参数&quot;">​</a></h2><p>用 <code>$_SERVER[&#39;SCRIPT_FILENAME&#39;].$_SERVER[&#39;REQUEST_URI&#39;];</code> 取得当前页面的完整路径和参数。<br> 取得参数：<code>$_SERVER[&#39;QUERY_STRING&#39;];</code></p><h2 id="js表单弹出对话框函数是-获得输入焦点函数是" tabindex="-1">JS表单弹出对话框函数是?获得输入焦点函数是? <a class="header-anchor" href="#js表单弹出对话框函数是-获得输入焦点函数是" aria-label="Permalink to &quot;JS表单弹出对话框函数是?获得输入焦点函数是?&quot;">​</a></h2><p>Alert()； focus();</p><h2 id="写一个函数-算出两个文件的相对路径" tabindex="-1">写一个函数，算出两个文件的相对路径 <a class="header-anchor" href="#写一个函数-算出两个文件的相对路径" aria-label="Permalink to &quot;写一个函数，算出两个文件的相对路径&quot;">​</a></h2><p>如：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$a = &#39;  /a/b/c/d/e.php&#39;;</span></span>
<span class="line"><span style="color:#babed8;">$b = &#39;  /a/b/12/34/c.php&#39;;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>计算出 $b 相对于 $a 的相对路径应该是 <a href="http://www.cnblogs.com/c/d%E5%B0%86()%E6%B7%BB%E4%B8%8A" target="_blank" rel="noreferrer">http://www.cnblogs.com/c/d将()添上</a></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$a = &#39;http://www.cnblogs.com/a/b/c/d/e.php&#39;;</span></span>
<span class="line"><span style="color:#babed8;">$b = &#39;http://www.cnblogs.com/a/b/12/34/c.php&#39;;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>代码：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$ainfo=parse_url($a);</span></span>
<span class="line"><span style="color:#babed8;">$binfo=parse_url($b);</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">$apath=ltrim($ainfo[&#39;path&#39;],&#39;/&#39;);</span></span>
<span class="line"><span style="color:#babed8;">$bpath=ltrim($binfo[&#39;path&#39;],&#39;/&#39;);</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">$arr=explode(&#39;/&#39;,$apath);</span></span>
<span class="line"><span style="color:#babed8;">$brr=explode(&#39;/&#39;,$bpath);</span></span>
<span class="line"><span style="color:#babed8;">$flag=false;</span></span>
<span class="line"><span style="color:#babed8;">for($i=0;$i&lt;count($arr);$i++){</span></span>
<span class="line"><span style="color:#babed8;"> if($arr[$i]!==$brr[$i]){</span></span>
<span class="line"><span style="color:#babed8;">  $ab[$i]=&#39;..&#39;;</span></span>
<span class="line"><span style="color:#babed8;">  if(!$flag){</span></span>
<span class="line"><span style="color:#babed8;">   for($j=$i;$j&lt;count($brr);$j++){</span></span>
<span class="line"><span style="color:#babed8;">    $bb[]=$brr[$j];</span></span>
<span class="line"><span style="color:#babed8;">   }</span></span>
<span class="line"><span style="color:#babed8;">   $flag=true;</span></span>
<span class="line"><span style="color:#babed8;">  }</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;">$cha=array_merge($ab,$bb);</span></span>
<span class="line"><span style="color:#babed8;">$cha=implode(&#39;/&#39;,$cha);</span></span>
<span class="line"><span style="color:#babed8;">print_r($cha); </span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="写一个函数-能够遍历一个文件夹下的所有文件和子文件夹。" tabindex="-1">写一个函数，能够遍历一个文件夹下的所有文件和子文件夹。 <a class="header-anchor" href="#写一个函数-能够遍历一个文件夹下的所有文件和子文件夹。" aria-label="Permalink to &quot;写一个函数，能够遍历一个文件夹下的所有文件和子文件夹。&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">function my_scandir($dir){</span></span>
<span class="line"><span style="color:#babed8;">    $files = array();</span></span>
<span class="line"><span style="color:#babed8;">    if ( $handle = opendir($dir) ){</span></span>
<span class="line"><span style="color:#babed8;">        while ( ($file = readdir($handle)) !== false ) {</span></span>
<span class="line"><span style="color:#babed8;">            if ( $file != &quot;..&quot; &amp;&amp; $file != &quot;.&quot; ) {</span></span>
<span class="line"><span style="color:#babed8;">            if ( is_dir($dir . &quot;/&quot; . $file) ) {</span></span>
<span class="line"><span style="color:#babed8;">                    $files[$file] = scandir($dir . &quot;/&quot; . $file);</span></span>
<span class="line"><span style="color:#babed8;">                }else {</span></span>
<span class="line"><span style="color:#babed8;">                    $files[] = $file;</span></span>
<span class="line"><span style="color:#babed8;">                }</span></span>
<span class="line"><span style="color:#babed8;">            }</span></span>
<span class="line"><span style="color:#babed8;">        }</span></span>
<span class="line"><span style="color:#babed8;">        closedir($handle);</span></span>
<span class="line"><span style="color:#babed8;">        return $files;</span></span>
<span class="line"><span style="color:#babed8;">    }</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="数据库索引有几类-分别是什么-什么时候该用索引" tabindex="-1">数据库索引有几类，分别是什么？什么时候该用索引？ <a class="header-anchor" href="#数据库索引有几类-分别是什么-什么时候该用索引" aria-label="Permalink to &quot;数据库索引有几类，分别是什么？什么时候该用索引？&quot;">​</a></h2><p>普通索引、主键索引、唯一索引</p><p>并非所有的数据库都以相同的方式使用索引，作为通用规则，只有当经常查询列中的数据时才需要在表上创建索引。</p><h2 id="写几个魔术方法并说明作用" tabindex="-1">写几个魔术方法并说明作用？ <a class="header-anchor" href="#写几个魔术方法并说明作用" aria-label="Permalink to &quot;写几个魔术方法并说明作用？&quot;">​</a></h2><ol><li><code>__call()</code> 当调用不存在的方法时会自动调用的方法</li><li><code>__autoload()</code> 在实例化一个尚未被定义的类是会自动调用次方法来加载类文件</li><li><code>__set()</code> 当给未定义的变量赋值时会自动调用的方法</li><li><code>__get()</code> 当获取未定义变量的值时会自动调用的方法</li><li><code>__construct()</code> 构造方法，实例化类时自动调用的方法</li><li><code>__destroy()</code> 销毁对象时自动调用的方法</li><li><code>__unset()</code> 当对一个未定义变量调用unset()时自动调用的方法</li><li><code>__isset()</code> 当对一个未定义变量调用isset()方法时自动调用的方法</li><li><code>__clone()</code> 克隆一个对象</li><li><code>__tostring()</code> 当输出一个对象时自动调用的方法</li></ol>`,136),m={id:"post、-cookie、-files-的意思是什么",tabindex:"-1"},Q={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},T={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"13.698ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 6054.7 950","aria-hidden":"true"},g=s('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"></g><g data-mml-node="mi" transform="translate(33,-150) scale(0.707)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(619.7,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1383.7,0)"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2174.7,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2941.7,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3705.7,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4350.7,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5054.7,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">、</text></g></g></g></g>',1),f=[g],$=a("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("msub",null,[a("mi"),a("mi",null,"R")]),a("mi",null,"E"),a("mi",null,"Q"),a("mi",null,"U"),a("mi",null,"E"),a("mi",null,"S"),a("mi",null,"T"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mo",null,"、")])])],-1),_={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.029ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 3106.8 950","aria-hidden":"true"},x=s('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"></g><g data-mml-node="mi" transform="translate(33,-150) scale(0.707)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(638.8,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1402.8,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2106.8,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">、</text></g></g></g></g>',1),k=[x],P=a("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("msub",null,[a("mi"),a("mi",null,"G")]),a("mi",null,"E"),a("mi",null,"T"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mo",null,"、")])])],-1),w={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},v={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"13.005ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 5748.1 950","aria-hidden":"true"},S=s('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"></g><g data-mml-node="mi" transform="translate(33,-150) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(539.1,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1303.1,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1948.1,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2593.1,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3097.1,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3860.1,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4748.1,0)"><g data-mml-node="mo"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">、</text></g></g></g></g>',1),H=[S],C=a("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("msub",null,[a("mi"),a("mi",null,"S")]),a("mi",null,"E"),a("mi",null,"S"),a("mi",null,"S"),a("mi",null,"I"),a("mi",null,"O"),a("mi",null,"N"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mo",null,"、")])])],-1),E=a("a",{class:"header-anchor",href:"#post、-cookie、-files-的意思是什么","aria-label":'Permalink to "$_REQUEST、$_POST、$_GET、$_COOKIE、$_SESSION、$_FILES 的意思是什么？"'},"​",-1),L=s(`<p>它们都是 PHP 预定义变量</p><ul><li>$_REQUEST 用来获取post或get方式提交的值</li><li>$_POST 用来获取post方式提交的值</li><li>$_GET 用来获取get方式提交的值</li><li>$_COOKIE 用来获取cookie存储的值</li><li>$_SESSION 用来获取session存储的值</li><li>$_FILES 用来获取上传文件表单的值</li></ul><h2 id="数组中下标最好是什么类型的-为什么" tabindex="-1">数组中下标最好是什么类型的，为什么？ <a class="header-anchor" href="#数组中下标最好是什么类型的-为什么" aria-label="Permalink to &quot;数组中下标最好是什么类型的，为什么？&quot;">​</a></h2><p>数组的下标最好是数字类型的，数字类型的处理速度快。</p><h2 id="i-和-i-哪一个效率高-为什么" tabindex="-1"><code>++i</code> 和 <code>i++</code> 哪一个效率高，为什么？ <a class="header-anchor" href="#i-和-i-哪一个效率高-为什么" aria-label="Permalink to &quot;\`++i\` 和 \`i++\` 哪一个效率高，为什么？&quot;">​</a></h2><p><code>++i</code> 效率比 <code>i++</code> 的效率更高，因为 <code>++i</code> 少了一个返回 i 的过程。</p><h2 id="magic-quotes-gpc-、magic-quotes-runtime-的意思是什么" tabindex="-1">magic_quotes_gpc()、magic_quotes_runtime() 的意思是什么？ <a class="header-anchor" href="#magic-quotes-gpc-、magic-quotes-runtime-的意思是什么" aria-label="Permalink to &quot;magic_quotes_gpc()、magic_quotes_runtime() 的意思是什么？&quot;">​</a></h2><ul><li><code>Magic_quotes_gpc()</code> 是 php 配置文件中的，如果设置为 on 则会自动 POST,GET,COOKIE 中的字符串进行转义，在 &#39; 之前加 \\</li><li><code>Magic_quotes_runtime()</code> 是 php 中的函数，如果参数为 true 则会数据库中取出来的单引号、双引号、反斜线自动加上反斜杠进行转义。</li></ul><h2 id="框架中什么是单一入口和多入口-单一入口的优缺点" tabindex="-1">框架中什么是单一入口和多入口，单一入口的优缺点？ <a class="header-anchor" href="#框架中什么是单一入口和多入口-单一入口的优缺点" aria-label="Permalink to &quot;框架中什么是单一入口和多入口，单一入口的优缺点？&quot;">​</a></h2><p>多入口就是通过访问不同的文件来完成用户请求。<br> 单一入口指web程序所有的请求都指向一个脚本文件的。</p><p>单一入口更容易控制权限，方便对http请求可以进行安全性检查。<br> 缺点：URL看起来不那么美观，特别是对搜索引擎来说不友好。</p><h2 id="你对memcach的理解-优点有哪些" tabindex="-1">你对Memcach的理解，优点有哪些？ <a class="header-anchor" href="#你对memcach的理解-优点有哪些" aria-label="Permalink to &quot;你对Memcach的理解，优点有哪些？&quot;">​</a></h2><p>Memcache是一种缓存技术，在一定的时间内将动态网页经过解析之后保存到文件，下次访问时动态网页就直接调用这个文件，而不必在重新访问数据库。使用memcache做缓存的好处是：提高网站的访问速度，减轻高并发时服务器的压力。</p><p>Memcache的优点：稳定、配置简单、多机分布式存储、速度快。</p><h2 id="对关系型数据库而言-索引是相当重要的概念-请回答有关索引几个问题" tabindex="-1">对关系型数据库而言，索引是相当重要的概念，请回答有关索引几个问题: <a class="header-anchor" href="#对关系型数据库而言-索引是相当重要的概念-请回答有关索引几个问题" aria-label="Permalink to &quot;对关系型数据库而言，索引是相当重要的概念，请回答有关索引几个问题:&quot;">​</a></h2><h3 id="a-索引的目的是什么" tabindex="-1">a) 索引的目的是什么? <a class="header-anchor" href="#a-索引的目的是什么" aria-label="Permalink to &quot;a) 索引的目的是什么?&quot;">​</a></h3><ul><li>1、快速访问数据表中的特定信息，提高检索速度</li><li>2、创建唯一性索引，保证数据库表中每一行数据的唯一性</li><li>3、加速表和表之间的连接</li><li>4、使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间</li></ul><h3 id="b-索引对数据库系统的负面影响是什么" tabindex="-1">b) 索引对数据库系统的负面影响是什么? <a class="header-anchor" href="#b-索引对数据库系统的负面影响是什么" aria-label="Permalink to &quot;b) 索引对数据库系统的负面影响是什么?&quot;">​</a></h3><p>负面影响：创建索引和维护索引需要耗费时间，这个时间随着数据量的增加而增加；索引需要占用物理空间，不光是表需要占用数据空间，每个索引也需要占用物理空间；当对表进行增、删、改的时候索引也要动态维护，这样就降低了数据的维护速度。</p><h3 id="c-为数据表建立索引的原则有哪些" tabindex="-1">c) 为数据表建立索引的原则有哪些? <a class="header-anchor" href="#c-为数据表建立索引的原则有哪些" aria-label="Permalink to &quot;c) 为数据表建立索引的原则有哪些?&quot;">​</a></h3><ul><li>1、在最频繁使用的、用以缩小查询范围的字段上建立索引</li><li>2、在平频繁使用的、需要排序的字段上建立索引</li></ul><h3 id="d-什么情况下不宜建立索引" tabindex="-1">d) 什么情况下不宜建立索引? <a class="header-anchor" href="#d-什么情况下不宜建立索引" aria-label="Permalink to &quot;d) 什么情况下不宜建立索引?&quot;">​</a></h3><ul><li>1、对于查询中很少涉及的列或者重复值比较多的列，不宜建立索引</li><li>2、对于一些特殊的数据类型，不宜建立索引，比如文本字段(text)，值范围较少的字段等。</li></ul><h2 id="web应用中-数据库的读取频率远高于写入频率-如何优化mysql而应对此种情景" tabindex="-1">web应用中,数据库的读取频率远高于写入频率, 如何优化MySQL而应对此种情景? <a class="header-anchor" href="#web应用中-数据库的读取频率远高于写入频率-如何优化mysql而应对此种情景" aria-label="Permalink to &quot;web应用中,数据库的读取频率远高于写入频率, 如何优化MySQL而应对此种情景?&quot;">​</a></h2><p>使用memcache缓存技术，将动态数据缓存到文件，访问动态页面时直接调用缓存文件，而不必重新访问数据库，这样就减少了查询数据库的次数。</p><p>如果网站的访问量很大，可以把数据库读写服务器分开，使用多台服务器去处理数据库查询，使用较少的服务器去处理数据库的写入和修改。</p><h2 id="include与require的区别" tabindex="-1">include与require的区别? <a class="header-anchor" href="#include与require的区别" aria-label="Permalink to &quot;include与require的区别?&quot;">​</a></h2><ul><li>1.include()在执行文件时每次都要进行读取和评估<br> require()文件只处理一次(实际上文件内容替换了require()语句)</li><li>2.require()通常放在PHP脚本程序的最前面<br> include()的使用和require()一样,一般放在流程控制的处理区段中,PHP脚本文件读到include()语句时,才将它包含的文件读进来,这种方式,可以把程序执行时的流程简单化</li><li>3,require()和include()语句是语言结构,不是真正的函数,可以像PHP的其他语言结构一样</li><li>4,include_once()和require_once()语句也是在脚本执行期间包括并运行指定文件,与include()require()唯一的区别是如果文件中的代码已经被包括了,则不会再次包括.</li><li>5,require()包含文件失败,停止执行,给出错误(致命的)<br> include()常用于动态包含。通常是自动加载的文件,即使加载出错,整个程序还是继续执行。一个页面声明,另一个页面调用。包函文件失败,继续向下执行,返回一条警告</li></ul><h2 id="php字符串中单引号与双引号的区别" tabindex="-1">PHP字符串中单引号与双引号的区别? <a class="header-anchor" href="#php字符串中单引号与双引号的区别" aria-label="Permalink to &quot;PHP字符串中单引号与双引号的区别?&quot;">​</a></h2><p>单引号不能解释变量，而双引号可以解释变量。<br> 单引号不能转义字符，在双引号中可以转义字符。</p><h2 id="php中-模板引擎的目的是什么-你用过哪些模板引擎" tabindex="-1">php中,模板引擎的目的是什么? 你用过哪些模板引擎? <a class="header-anchor" href="#php中-模板引擎的目的是什么-你用过哪些模板引擎" aria-label="Permalink to &quot;php中,模板引擎的目的是什么? 你用过哪些模板引擎?&quot;">​</a></h2><p>使用模板引擎的目的是使程序的逻辑代码和html界面代码分离开，是程序的结构更清晰。<br> 使用过的模板引擎：Smarty、ThinkPHP的ThinkTemplate、laravel的blade</p><h2 id="指出以下代码片段中的sql注入漏洞以及解决方法-magic-quotes-gpc-off" tabindex="-1">指出以下代码片段中的SQL注入漏洞以及解决方法(magic_quotes_gpc = off) <a class="header-anchor" href="#指出以下代码片段中的sql注入漏洞以及解决方法-magic-quotes-gpc-off" aria-label="Permalink to &quot;指出以下代码片段中的SQL注入漏洞以及解决方法(magic_quotes_gpc = off)&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">mysql_query(“select id,title from content where catid=’{$_GET[catid]}’ and title like ’%$_GET[keywords]%’”, $link);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>注入漏洞主要存在用户提交的数据上，这里的注入漏洞主要是 <code>$_GET[catid]</code> 和 <code>$_GET[keyword]</code></p><p>解决注入漏洞：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$_GET[catid] = intval($_GET[catid]);</span></span>
<span class="line"><span style="color:#babed8;">$sql = &quot;select id,title from content where catid = &#39;{$_GET[catid]}&#39; and title like &#39;%$_GET[keywords]%&#39;&quot;;</span></span>
<span class="line"><span style="color:#babed8;">$sql = addslashes($sql);</span></span>
<span class="line"><span style="color:#babed8;">Mysql_query($sql);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="分别指出-php-ini-中-magic-quotes-gpc-magic-quotes-runtime-两项参数的作用" tabindex="-1">分别指出 <code>php.ini</code> 中 <code>magic_quotes_gpc</code> , <code>magic_quotes_runtime</code> 两项参数的作用. <a class="header-anchor" href="#分别指出-php-ini-中-magic-quotes-gpc-magic-quotes-runtime-两项参数的作用" aria-label="Permalink to &quot;分别指出 \`php.ini\` 中 \`magic_quotes_gpc\` , \`magic_quotes_runtime\` 两项参数的作用.&quot;">​</a></h2><ul><li>Magic_quotes_gpc 的作用是在 POST、GET、COOKIE 数据上使用 addslashes() 自动转义。</li><li>Magic_quotes_runtime 参数的作用是设置状态，当状态为 0 时则关闭自动转义，设置为 1 则自动转义，将数据库中取出来的单引号、双引号、反斜线这些字符加上反斜杠转义。</li></ul><h2 id="写出以下php代码的运行结果" tabindex="-1">写出以下php代码的运行结果: <a class="header-anchor" href="#写出以下php代码的运行结果" aria-label="Permalink to &quot;写出以下php代码的运行结果:&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">&lt;?php</span></span>
<span class="line"><span style="color:#babed8;">function foo($i) {</span></span>
<span class="line"><span style="color:#babed8;">    $i++;</span></span>
<span class="line"><span style="color:#babed8;">    echo $i ;</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">function bar(&amp;$i) {</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;">$i = 10 ;</span></span>
<span class="line"><span style="color:#babed8;">echo $i++ , ++$i; # 输出：10,12</span></span>
<span class="line"><span style="color:#babed8;">foo($i); # 输出：13</span></span>
<span class="line"><span style="color:#babed8;">bar($i); # 输出：无输出</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="如何快速下载一个远程http服务器上的图片文件到本地" tabindex="-1">如何快速下载一个远程http服务器上的图片文件到本地? <a class="header-anchor" href="#如何快速下载一个远程http服务器上的图片文件到本地" aria-label="Permalink to &quot;如何快速下载一个远程http服务器上的图片文件到本地?&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$file = &quot;&quot;;</span></span>
<span class="line"><span style="color:#babed8;">$fp = fopen($file, &#39;rb&#39;);</span></span>
<span class="line"><span style="color:#babed8;">$img = fread($fp, 10000);</span></span>
<span class="line"><span style="color:#babed8;">$dir = &quot;./&quot;;</span></span>
<span class="line"><span style="color:#babed8;">$local = fopen($dir.&#39;/&#39;.basename($file), &#39;w&#39;);</span></span>
<span class="line"><span style="color:#babed8;">Fwrite($local, $img);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="什么是时间戳-如何取得当前时间戳" tabindex="-1">什么是时间戳? 如何取得当前时间戳? <a class="header-anchor" href="#什么是时间戳-如何取得当前时间戳" aria-label="Permalink to &quot;什么是时间戳? 如何取得当前时间戳?&quot;">​</a></h2><p>时间戳是从1970年1月1日 00:00:00到指定日期的秒数。<br> 获取当前时间戳：time()</p><h2 id="了解xss攻击吗-如何防止" tabindex="-1">了解XSS攻击吗? 如何防止 ? <a class="header-anchor" href="#了解xss攻击吗-如何防止" aria-label="Permalink to &quot;了解XSS攻击吗? 如何防止 ?&quot;">​</a></h2><p>XSS是跨站脚本攻击，首先是利用跨站脚本漏洞以一个特权模式去执行攻击者构造的脚本，然后利用不安全的Activex控件执行恶意的行为。</p><p>使用 <code>htmlspecialchars()</code> 函数对提交的内容进行过滤，使字符串里面的特殊符号实体化。</p><h2 id="sql注入漏洞产生的原因-如何防止" tabindex="-1">SQL注入漏洞产生的原因 ? 如何防止? <a class="header-anchor" href="#sql注入漏洞产生的原因-如何防止" aria-label="Permalink to &quot;SQL注入漏洞产生的原因 ? 如何防止?&quot;">​</a></h2><p>SQL注入产生的原因：程序开发过程中不注意规范书写sql语句和对特殊字符进行过滤，导致客户端可以通过全局变量POST和GET提交一些sql语句正常执行。</p><h3 id="防止sql注入" tabindex="-1">防止SQL注入： <a class="header-anchor" href="#防止sql注入" aria-label="Permalink to &quot;防止SQL注入：&quot;">​</a></h3><ul><li>1、开启配置文件中的magic_quotes_gpc和magic_quotes_runtime设置</li><li>2、执行sql语句时使用addslashes进行sql语句转换</li><li>3、Sql语句书写尽量不要省略小引号和单引号</li><li>4、过滤掉sql语句中的一些关键字：update、insert、delete、select、*</li><li>5、提高数据库表和字段的命名技巧，对一些重要的字段根据程序的特点命名，取不易被猜到的。</li><li>6、Php配置文件中设置register_globals为off，关闭全局变量注册</li><li>7、控制错误信息，不要再浏览器上输出错误信息，将错误信息写到日志文件中。</li></ul><h2 id="一个字节占多少bit-一个ipv4地址占几个字节-一个ipv6地址呢" tabindex="-1">一个字节占多少bit ? 一个IPv4地址占几个字节? 一个IPv6地址呢? <a class="header-anchor" href="#一个字节占多少bit-一个ipv4地址占几个字节-一个ipv6地址呢" aria-label="Permalink to &quot;一个字节占多少bit ? 一个IPv4地址占几个字节? 一个IPv6地址呢?&quot;">​</a></h2><p>一个字节占8bit，一个IPV4占用4字节，一个IPV6占用16字节。</p><h2 id="_142-1m-adsl宽带连接-理想情况下-最大下载速度是多少kb-s" tabindex="-1">142. 1M ADSL宽带连接, 理想情况下, 最大下载速度是多少KB/s ? <a class="header-anchor" href="#_142-1m-adsl宽带连接-理想情况下-最大下载速度是多少kb-s" aria-label="Permalink to &quot;142. 1M ADSL宽带连接, 理想情况下, 最大下载速度是多少KB/s ?&quot;">​</a></h2><p>256KB/s</p><h2 id="_143-请写出一个正则表达式-用于匹配一个html文件中-img-标记中的图片地址" tabindex="-1">143.请写出一个正则表达式,用于匹配一个HTML文件中 <code>&lt;img /&gt;</code> 标记中的图片地址 <a class="header-anchor" href="#_143-请写出一个正则表达式-用于匹配一个html文件中-img-标记中的图片地址" aria-label="Permalink to &quot;143.请写出一个正则表达式,用于匹配一个HTML文件中 \`&lt;img /&gt;\` 标记中的图片地址&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$url=”&lt;img src=’11.jpg’/&gt;”;</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">/&lt;img[\\s]*src=[&#39;|\\&quot;](.*)[&#39;|\\&quot;][\\s]*\\/&gt;/</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_145-fatal-error-call-to-undefined-method-ge-user-in-website-index-php-on-line-39" tabindex="-1">145.Fatal error: Call to undefined method ge_user() in /website/index.php on line 39 <a class="header-anchor" href="#_145-fatal-error-call-to-undefined-method-ge-user-in-website-index-php-on-line-39" aria-label="Permalink to &quot;145.Fatal error: Call to undefined method ge_user() in /website/index.php on line 39&quot;">​</a></h2><p>调用了未定义的方法ge_user()，检查程序中有没有定义此方法</p><h2 id="_146-fatal-error-class-client-not-found-in-website-index-php-on-line-173" tabindex="-1">146.Fatal error: Class ’client’ not found in /website/index.php on line 173 <a class="header-anchor" href="#_146-fatal-error-class-client-not-found-in-website-index-php-on-line-173" aria-label="Permalink to &quot;146.Fatal error: Class ’client’ not found in /website/index.php on line 173&quot;">​</a></h2><p>类client没有找到，检查文件中有没有client类，或者有没有包含client类文件</p><h2 id="_147-warning-cannot-modify-header-information-headers-already-sent-by-output-started-at-website-index-php-1-in-website-index-php-on-line-3" tabindex="-1">147.Warning: Cannot modify header information - headers already sent by (output started at /website/index.php:1) in /website/index.php on line 3 <a class="header-anchor" href="#_147-warning-cannot-modify-header-information-headers-already-sent-by-output-started-at-website-index-php-1-in-website-index-php-on-line-3" aria-label="Permalink to &quot;147.Warning: Cannot modify header information - headers already sent by (output started at /website/index.php:1) in /website/index.php on line 3&quot;">​</a></h2><p>提示文件前面有输出，检查是否有输出，或者编码</p><h2 id="_148-warning-session-start-open-website-tmp-sess-47e067121facf033785f9a1cb16d243b-o-rdwr-failed-no-such-file-or-directory-2-in-website-index-php-on-line-10" tabindex="-1">148.Warning:session_start(): open(/website/tmp/sess_47e067121facf033785f9a1cb16d243b, O_RDWR) failed: No such file or directory (2) in /website/index.php on line 10 <a class="header-anchor" href="#_148-warning-session-start-open-website-tmp-sess-47e067121facf033785f9a1cb16d243b-o-rdwr-failed-no-such-file-or-directory-2-in-website-index-php-on-line-10" aria-label="Permalink to &quot;148.Warning:session_start(): open(/website/tmp/sess_47e067121facf033785f9a1cb16d243b, O_RDWR) failed: No such file or directory (2) in /website/index.php on line 10&quot;">​</a></h2><p>没有找到文件或目录，检查文件是否存在</p><h2 id="_149-parse-error-syntax-error-unexpected-t-string-in-website-index-php-on-line-18" tabindex="-1">149.Parse error: syntax error, unexpected T_STRING in /website/index.php on line 18 <a class="header-anchor" href="#_149-parse-error-syntax-error-unexpected-t-string-in-website-index-php-on-line-18" aria-label="Permalink to &quot;149.Parse error: syntax error, unexpected T_STRING in /website/index.php on line 18&quot;">​</a></h2><p>18行语法错误，检查语法</p><h2 id="_150-warning-fopen-welcome-txt-function-fopen-failed-to-open-stream-no-such-file-or-directory-in-website-index-php-on-line-2" tabindex="-1">150.Warning:fopen(welcome.txt) [function.fopen]: failed to open stream: No such file or directory in /website/index.php on line 2 <a class="header-anchor" href="#_150-warning-fopen-welcome-txt-function-fopen-failed-to-open-stream-no-such-file-or-directory-in-website-index-php-on-line-2" aria-label="Permalink to &quot;150.Warning:fopen(welcome.txt) [function.fopen]: failed to open stream: No such file or directory in /website/index.php on line 2&quot;">​</a></h2><p>没有找到welcome.txt文件，检查文件是否存在</p><h2 id="_1、抓取远程图片到本地-你会用什么函数" tabindex="-1">1、抓取远程图片到本地,你会用什么函数? <a class="header-anchor" href="#_1、抓取远程图片到本地-你会用什么函数" aria-label="Permalink to &quot;1、抓取远程图片到本地,你会用什么函数?&quot;">​</a></h2><p>fsockopen, A</p><h2 id="_3、用php打印出前一天的时间-打印格式是2007年5月10日22-21-21" tabindex="-1">3、用PHP打印出前一天的时间，打印格式是2007年5月10日22:21:21 <a class="header-anchor" href="#_3、用php打印出前一天的时间-打印格式是2007年5月10日22-21-21" aria-label="Permalink to &quot;3、用PHP打印出前一天的时间，打印格式是2007年5月10日22:21:21&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">echo date(&#39;Y-m-d H:i:s&#39;, strtotime(&#39;-1 day&#39;));</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_4、javascript能否定义二维数组-如果不能你如何解决" tabindex="-1">4、javascript能否定义二维数组，如果不能你如何解决？ <a class="header-anchor" href="#_4、javascript能否定义二维数组-如果不能你如何解决" aria-label="Permalink to &quot;4、javascript能否定义二维数组，如果不能你如何解决？&quot;">​</a></h2><p>javascript不支持二维数组定义，可以用arr[0] = new array()来解决</p><h2 id="_5、假设a-html和b-html在同一个文件夹下面-用javascript实现当打开a-html五秒钟后-自动跳转到b-html。" tabindex="-1">5、假设a.html和b.html在同一个文件夹下面，用javascript实现当打开a.html五秒钟后，自动跳转到b.html。 <a class="header-anchor" href="#_5、假设a-html和b-html在同一个文件夹下面-用javascript实现当打开a-html五秒钟后-自动跳转到b-html。" aria-label="Permalink to &quot;5、假设a.html和b.html在同一个文件夹下面，用javascript实现当打开a.html五秒钟后，自动跳转到b.html。&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">&lt;script&gt;</span></span>
<span class="line"><span style="color:#babed8;">function go2b(){</span></span>
<span class="line"><span style="color:#babed8;"> window.location = &#39;b.html&#39;;</span></span>
<span class="line"><span style="color:#babed8;"> window.close();</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;">setTimeout( &quot;go2b()&quot;, 5000 ); //5秒钟后自动执行go2b()</span></span>
<span class="line"><span style="color:#babed8;">&lt;/script&gt;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_6-获取当前浏览的页面的相关信息" tabindex="-1">6.获取当前浏览的页面的相关信息 <a class="header-anchor" href="#_6-获取当前浏览的页面的相关信息" aria-label="Permalink to &quot;6.获取当前浏览的页面的相关信息&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">//正在浏览当前页面用户的 IP 地址:127.0.0.1</span></span>
<span class="line"><span style="color:#babed8;">echo $_SERVER[&quot;REMOTE_ADDR&quot;].”&lt;br /&gt;”;</span></span>
<span class="line"><span style="color:#babed8;">//查询（query）的字符串（URL 中第一个问号 ? 之后的内容）:id=1&amp;bi=2</span></span>
<span class="line"><span style="color:#babed8;">echo $_SERVER[&quot;QUERY_STRING&quot;].”&lt;br /&gt;”;</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">//当前运行脚本所在的文档根目录:d:inetpubwwwroot</span></span>
<span class="line"><span style="color:#babed8;">echo $_SERVER[&quot;DOCUMENT_ROOT&quot;].”&lt;br /&gt;”;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_7、在http-1-0中-状态码-401-的含义是未授权-如果返回-找不到文件-的提示-则可用-header-函数-其语句为header-http-1-0-404-not-found" tabindex="-1">7、在HTTP 1.0中，状态码 401 的含义是未授权____；如果返回“找不到文件”的提示，则可用 header 函数，其语句为header(“HTTP/1.0 404 Not Found”); <a class="header-anchor" href="#_7、在http-1-0中-状态码-401-的含义是未授权-如果返回-找不到文件-的提示-则可用-header-函数-其语句为header-http-1-0-404-not-found" aria-label="Permalink to &quot;7、在HTTP 1.0中，状态码 401 的含义是未授权____；如果返回“找不到文件”的提示，则可用 header 函数，其语句为header(“HTTP/1.0 404 Not Found”);&quot;">​</a></h2><p>401表示未授权;header(“HTTP/1.0 404 Not Found”);</p><h2 id="_9、把-john-新增到-users-阵列" tabindex="-1">9、把 John 新增到 users 阵列？ <a class="header-anchor" href="#_9、把-john-新增到-users-阵列" aria-label="Permalink to &quot;9、把 John 新增到 users 阵列？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$users[] = ‘john’;</span></span>
<span class="line"><span style="color:#babed8;"># 或者 </span></span>
<span class="line"><span style="color:#babed8;">array_push($users,‘john’);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="在php中error-reporting这个函数有什么作用-1" tabindex="-1">在PHP中error_reporting这个函数有什么作用？ <a class="header-anchor" href="#在php中error-reporting这个函数有什么作用-1" aria-label="Permalink to &quot;在PHP中error_reporting这个函数有什么作用？&quot;">​</a></h2><p>error_reporting() 设置 PHP 的报错级别并返回当前级别。</p><h2 id="_13、如何修改session的生存时间-1分" tabindex="-1">13、如何修改SESSION的生存时间(1分). <a class="header-anchor" href="#_13、如何修改session的生存时间-1分" aria-label="Permalink to &quot;13、如何修改SESSION的生存时间(1分).&quot;">​</a></h2><ul><li>方法1:<br> 将php.ini中的session.gc_maxlifetime设置为9999重启apache</li><li>方法2:<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$savePath = “./session_save_dir/”;</span></span>
<span class="line"><span style="color:#babed8;">$lifeTime = 小时 * 秒;</span></span>
<span class="line"><span style="color:#babed8;">session_save_path($savePath);</span></span>
<span class="line"><span style="color:#babed8;">session_set_cookie_params($lifeTime);</span></span>
<span class="line"><span style="color:#babed8;">session_start();</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div></li><li>方法3:<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">setcookie() and session_set_cookie_params($lifeTime);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div></li></ul><h2 id="_14、有一个网页地址-比如php开发资源网主页-http-www-phpres-com-index-html-如何得到它的内容-1分" tabindex="-1">14、有一个网页地址, 比如PHP开发资源网主页: <a href="http://www.phpres.com/index.html,%E5%A6%82%E4%BD%95%E5%BE%97%E5%88%B0%E5%AE%83%E7%9A%84%E5%86%85%E5%AE%B9?($1%E5%88%86)" target="_blank" rel="noreferrer">http://www.phpres.com/index.html,如何得到它的内容?($1分)</a> <a class="header-anchor" href="#_14、有一个网页地址-比如php开发资源网主页-http-www-phpres-com-index-html-如何得到它的内容-1分" aria-label="Permalink to &quot;14、有一个网页地址, 比如PHP开发资源网主页: http://www.phpres.com/index.html,如何得到它的内容?($1分)&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;"># 方法1(对于PHP5及更高版本):</span></span>
<span class="line"><span style="color:#babed8;">$readcontents = fopen(“http://www.phpres.com/index.html”, “rb”);</span></span>
<span class="line"><span style="color:#babed8;">$contents = stream_get_contents($readcontents);</span></span>
<span class="line"><span style="color:#babed8;">fclose($readcontents);</span></span>
<span class="line"><span style="color:#babed8;">echo $contents;</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;"># 方法2:</span></span>
<span class="line"><span style="color:#babed8;">echo file_get_contents(“http://www.phpres.com/index.html”);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_16、写一个函数-尽可能高效的-从一个标准-url-里取出文件的扩展名" tabindex="-1">16、写一个函数，尽可能高效的，从一个标准 url 里取出文件的扩展名 <a class="header-anchor" href="#_16、写一个函数-尽可能高效的-从一个标准-url-里取出文件的扩展名" aria-label="Permalink to &quot;16、写一个函数，尽可能高效的，从一个标准 url 里取出文件的扩展名&quot;">​</a></h2><p>例如: <code>http://www.sina.com.cn/abc/de/fg.php?id=1</code> 需要取出 php 或 .php</p><p>答案1:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">function getExt($url){</span></span>
<span class="line"><span style="color:#babed8;">    $arr = parse_url($url);</span></span>
<span class="line"><span style="color:#babed8;">    $file = basename($arr[&#39;path&#39;]);</span></span>
<span class="line"><span style="color:#babed8;">    $ext = explode(“.”,$file);</span></span>
<span class="line"><span style="color:#babed8;">    return $ext[1];</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>答案2:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">function getExt($url) {</span></span>
<span class="line"><span style="color:#babed8;">    $url = basename($url);</span></span>
<span class="line"><span style="color:#babed8;">    $pos1 = strpos($url,”.”);</span></span>
<span class="line"><span style="color:#babed8;">    $pos2 = strpos($url,”?”);</span></span>
<span class="line"><span style="color:#babed8;">    if(strstr($url,”?”)){</span></span>
<span class="line"><span style="color:#babed8;">        Return substr($url,$pos1 + 1,$pos2 – $pos1 – 1);</span></span>
<span class="line"><span style="color:#babed8;">    } else {</span></span>
<span class="line"><span style="color:#babed8;">        return substr($url,$pos1);</span></span>
<span class="line"><span style="color:#babed8;">    }</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="使用五种以上方式获取一个文件的扩展名" tabindex="-1">使用五种以上方式获取一个文件的扩展名 <a class="header-anchor" href="#使用五种以上方式获取一个文件的扩展名" aria-label="Permalink to &quot;使用五种以上方式获取一个文件的扩展名&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;"># 要求：dir/upload.image.jpg，找出 .jpg 或者 jpg ，</span></span>
<span class="line"><span style="color:#babed8;"># 必须使用PHP自带的处理函数进行处理，方法不能明显重复，可以封装成函数 get_ext1($file_name), get_ext2($file_name)</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">function get_ext1($file_name){</span></span>
<span class="line"><span style="color:#babed8;">    return strrchr($file_name, ‘.’);</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">function get_ext2($file_name){</span></span>
<span class="line"><span style="color:#babed8;">    return substr($file_name,strrpos($file_name, ‘.’));</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">function get_ext3($file_name){</span></span>
<span class="line"><span style="color:#babed8;">    return array_pop(explode(‘.’, $file_name));</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">function get_ext4($file_name){</span></span>
<span class="line"><span style="color:#babed8;">    $p = pathinfo($file_name);</span></span>
<span class="line"><span style="color:#babed8;">    return $p[&#39;extension&#39;];</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">function get_ext5($file_name){</span></span>
<span class="line"><span style="color:#babed8;">    return strrev(substr(strrev($file_name), 0, strpos(strrev($file_name), ‘.’)));</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_18、写出以下代码输出结果" tabindex="-1">18、写出以下代码输出结果 <a class="header-anchor" href="#_18、写出以下代码输出结果" aria-label="Permalink to &quot;18、写出以下代码输出结果&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">&lt;?php</span></span>
<span class="line"><span style="color:#babed8;">$str1 = null;</span></span>
<span class="line"><span style="color:#babed8;">$str2 = false;</span></span>
<span class="line"><span style="color:#babed8;">echo $str1==$str2 ? ‘相等’ : ‘不相等’;</span></span>
<span class="line"><span style="color:#babed8;">$str3 = ”;</span></span>
<span class="line"><span style="color:#babed8;">$str4 = 0;</span></span>
<span class="line"><span style="color:#babed8;">echo $str3==$str4 ? ‘相等’ : ‘不相等’;</span></span>
<span class="line"><span style="color:#babed8;">$str5 = 0;</span></span>
<span class="line"><span style="color:#babed8;">$str6 = ’0′;</span></span>
<span class="line"><span style="color:#babed8;">echo $str5===$str6 ? ‘相等’ : ‘不相等’;</span></span>
<span class="line"><span style="color:#babed8;">?&gt;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>结果：<code>相等 相等 不相等</code></p><h2 id="mysql数据库中的字段类型varchar和char的主要区别是什么-那种字段的查找效率要高-为什么" tabindex="-1">MySQL数据库中的字段类型varchar和char的主要区别是什么？那种字段的查找效率要高，为什么? <a class="header-anchor" href="#mysql数据库中的字段类型varchar和char的主要区别是什么-那种字段的查找效率要高-为什么" aria-label="Permalink to &quot;MySQL数据库中的字段类型varchar和char的主要区别是什么？那种字段的查找效率要高，为什么?&quot;">​</a></h2><p>Varchar是变长，节省存储空间。 char是固定长度。<br> 查找效率：char 要比 varchar 型快，因为 varchar 是非定长，必须先查找长度，然后进行数据的提取，比 char 定长类型多了一个步骤，所以效率低一些。</p><h2 id="请使用javascript写出三种产生一个image-标签的方法-提示-从方法、对象、html角度考虑" tabindex="-1">请使用JavaScript写出三种产生一个Image 标签的方法（提示：从方法、对象、HTML角度考虑） <a class="header-anchor" href="#请使用javascript写出三种产生一个image-标签的方法-提示-从方法、对象、html角度考虑" aria-label="Permalink to &quot;请使用JavaScript写出三种产生一个Image 标签的方法（提示：从方法、对象、HTML角度考虑）&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">(1)var img = new Image();</span></span>
<span class="line"><span style="color:#babed8;">(2)var img = document.createElement(“image”)</span></span>
<span class="line"><span style="color:#babed8;">(3)img.innerHTML = “&lt;img src=”xxx.jpg” /&gt;”</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="请描述出两点以上xhtml和html最显著的区别" tabindex="-1">请描述出两点以上XHTML和HTML最显著的区别 <a class="header-anchor" href="#请描述出两点以上xhtml和html最显著的区别" aria-label="Permalink to &quot;请描述出两点以上XHTML和HTML最显著的区别&quot;">​</a></h2><p>(1)XHTML必须强制指定文档类型DocType，HTML不需要<br> (2)XHTML所有标签必须闭合，HTML比较随意</p><h2 id="写出三种以上mysql数据库存储引擎的名称-提示-不区分大小写" tabindex="-1">写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写） <a class="header-anchor" href="#写出三种以上mysql数据库存储引擎的名称-提示-不区分大小写" aria-label="Permalink to &quot;写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）&quot;">​</a></h2><p>MyISAM、InnoDB、BDB（Berkeley DB）、Merge、Memory（Heap）、Example、Federated、Archive、CSV、Blackhole、MaxDB 等等十几个引擎</p><h2 id="求两个日期的差数-例如2007-2-5-2007-3-6-的日期差数" tabindex="-1">求两个日期的差数，例如2007-2-5 ~ 2007-3-6 的日期差数 <a class="header-anchor" href="#求两个日期的差数-例如2007-2-5-2007-3-6-的日期差数" aria-label="Permalink to &quot;求两个日期的差数，例如2007-2-5 ~ 2007-3-6 的日期差数&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;"># 方法一：</span></span>
<span class="line"><span style="color:#babed8;">&lt;?php</span></span>
<span class="line"><span style="color:#babed8;">class Dtime{</span></span>
<span class="line"><span style="color:#babed8;"> function get_days($date1, $date2){</span></span>
<span class="line"><span style="color:#babed8;">  $time1 = strtotime($date1);</span></span>
<span class="line"><span style="color:#babed8;">  $time2 = strtotime($date2);</span></span>
<span class="line"><span style="color:#babed8;">  return ($time2-$time1)/86400;</span></span>
<span class="line"><span style="color:#babed8;"> }</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;">$Dtime = new Dtime;</span></span>
<span class="line"><span style="color:#babed8;">echo $Dtime-&gt;get_days(’2007-2-5′, ’2007-3-6′);</span></span>
<span class="line"><span style="color:#babed8;">?&gt;</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;"># 方法二：</span></span>
<span class="line"><span style="color:#babed8;">&lt;?php</span></span>
<span class="line"><span style="color:#babed8;">$temp = explode(‘-’, ’2007-2-5′);</span></span>
<span class="line"><span style="color:#babed8;">$time1 = mktime(0, 0, 0, $temp[1], $temp[2], $temp[0]);</span></span>
<span class="line"><span style="color:#babed8;">$temp = explode(‘-’, ’2007-3-6′);</span></span>
<span class="line"><span style="color:#babed8;">$time2 = mktime(0, 0, 0, $temp[1], $temp[2], $temp[0]);</span></span>
<span class="line"><span style="color:#babed8;">echo ($time2-$time1)/86400;</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;"># 方法三：</span></span>
<span class="line"><span style="color:#babed8;">echo abs(strtotime(“2007-2-1″)-strtotime(“2007-3-1″))/60/60/24 计算时间差</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="请写一个函数-实现以下功能-字符串-open-door-转换成-opendoor-、-make-by-id-转换成-makebyid-。" tabindex="-1">请写一个函数，实现以下功能：字符串“open_door” 转换成 “OpenDoor”、”make_by_id” 转换成 ”MakeById”。 <a class="header-anchor" href="#请写一个函数-实现以下功能-字符串-open-door-转换成-opendoor-、-make-by-id-转换成-makebyid-。" aria-label="Permalink to &quot;请写一个函数，实现以下功能：字符串“open_door” 转换成 “OpenDoor”、”make_by_id” 转换成 ”MakeById”。&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;"># 方法一：</span></span>
<span class="line"><span style="color:#babed8;">function str_explode($str){</span></span>
<span class="line"><span style="color:#babed8;">    $str_arr=explode(“_”,$str);</span></span>
<span class="line"><span style="color:#babed8;">    $str_implode=implode(” “,$str_arr);</span></span>
<span class="line"><span style="color:#babed8;">    $str_implode=implode(“”,explode(” “,ucwords($str_implode)));</span></span>
<span class="line"><span style="color:#babed8;">    return $str_implode;</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;">$strexplode=str_explode(“make_by_id”);print_r($strexplode);</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;"># 方法二：</span></span>
<span class="line"><span style="color:#babed8;">$str=”make_by_id!”;</span></span>
<span class="line"><span style="color:#babed8;">$expStr=explode(“_”,$str);</span></span>
<span class="line"><span style="color:#babed8;">for($i=0;$i&lt;count($expStr);$i++){</span></span>
<span class="line"><span style="color:#babed8;">    echo ucwords($expStr[$i]);</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;"># 方法三：</span></span>
<span class="line"><span style="color:#babed8;">echo str_replace(‘ ‘,”,ucwords(str_replace(‘_’,’ ‘,’open_door’)));</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="一个表中的id有多个记录-把所有这个id的记录查出来-并显示共有多少条记录数-用sql语句及视图、存储过程分别实现。" tabindex="-1">一个表中的Id有多个记录，把所有这个id的记录查出来，并显示共有多少条记录数，用SQL语句及视图、存储过程分别实现。 <a class="header-anchor" href="#一个表中的id有多个记录-把所有这个id的记录查出来-并显示共有多少条记录数-用sql语句及视图、存储过程分别实现。" aria-label="Permalink to &quot;一个表中的Id有多个记录，把所有这个id的记录查出来，并显示共有多少条记录数，用SQL语句及视图、存储过程分别实现。&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">DELIMITER //</span></span>
<span class="line"><span style="color:#babed8;">create procedure proc_countNum(in columnId int,out rowsNo int)</span></span>
<span class="line"><span style="color:#babed8;">begin</span></span>
<span class="line"><span style="color:#babed8;">select count(*) into rowsNo from member where member_id=columnId;</span></span>
<span class="line"><span style="color:#babed8;">end</span></span>
<span class="line"><span style="color:#babed8;">call proc_countNum(1,@no);</span></span>
<span class="line"><span style="color:#babed8;">select @no;</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;"># 方法：视图：</span></span>
<span class="line"><span style="color:#babed8;">create view v_countNum as select member_id,count(*) as countNum from member group by</span></span>
<span class="line"><span style="color:#babed8;">member_id</span></span>
<span class="line"><span style="color:#babed8;">select countNum from v_countNum where member_id=1</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="js中网页前进和后退的代码" tabindex="-1">js中网页前进和后退的代码 <a class="header-anchor" href="#js中网页前进和后退的代码" aria-label="Permalink to &quot;js中网页前进和后退的代码&quot;">​</a></h2><p>前进: history.forward();=history.go(1);<br> 后退: history.back();=history.go(-1);</p><h2 id="echo-count-abc-输出什么" tabindex="-1">echo count(“abc”); 输出什么？ <a class="header-anchor" href="#echo-count-abc-输出什么" aria-label="Permalink to &quot;echo count(“abc”); 输出什么？&quot;">​</a></h2><p>答案:1</p><p>count -- 计算数组中的单元数目或对象中的属性个数</p><p>int count ( mixed$var [, int $mode ] ), 如果 var 不是数组类型或者实现了 Countable 接口的对象，将返回1，有一个例外，如果 var 是 NULL 则结果是 0。</p><p>对于对象，如果安装了 SPL，可以通过实现 Countable 接口来调用 count()。该接口只有一个方法 count()，此方法返回 count() 函数的返回值。</p><h2 id="有一个一维数组-里面存储整形数据-请写一个函数-将他们按从大到小的顺序排列。要求执行效率高。并说明如何改善执行效率。-该函数必须自己实现-不能使用php函数" tabindex="-1">有一个一维数组，里面存储整形数据，请写一个函数，将他们按从大到小的顺序排列。要求执行效率高。并说明如何改善执行效率。（该函数必须自己实现，不能使用php函数） <a class="header-anchor" href="#有一个一维数组-里面存储整形数据-请写一个函数-将他们按从大到小的顺序排列。要求执行效率高。并说明如何改善执行效率。-该函数必须自己实现-不能使用php函数" aria-label="Permalink to &quot;有一个一维数组，里面存储整形数据，请写一个函数，将他们按从大到小的顺序排列。要求执行效率高。并说明如何改善执行效率。（该函数必须自己实现，不能使用php函数）&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">&lt;?php</span></span>
<span class="line"><span style="color:#babed8;">function BubbleSort(&amp;$arr){</span></span>
<span class="line"><span style="color:#babed8;">    $cnt=count($arr);</span></span>
<span class="line"><span style="color:#babed8;">    $flag=1;</span></span>
<span class="line"><span style="color:#babed8;">    for($i=0;$i&lt;$cnt;$i++){</span></span>
<span class="line"><span style="color:#babed8;">        if($flag==0){</span></span>
<span class="line"><span style="color:#babed8;">            return;</span></span>
<span class="line"><span style="color:#babed8;">        }</span></span>
<span class="line"><span style="color:#babed8;">        $flag=0;</span></span>
<span class="line"><span style="color:#babed8;">        for($j=0;$j&lt;$cnt-$i-1;$j++){</span></span>
<span class="line"><span style="color:#babed8;">            if($arr[$j]&gt;$arr[$j+1]){</span></span>
<span class="line"><span style="color:#babed8;">                $tmp=$arr[$j];</span></span>
<span class="line"><span style="color:#babed8;">                $arr[$j]=$arr[$j+1];</span></span>
<span class="line"><span style="color:#babed8;">                $arr[$j+1]=$tmp;</span></span>
<span class="line"><span style="color:#babed8;">                $flag=1;</span></span>
<span class="line"><span style="color:#babed8;">            }</span></span>
<span class="line"><span style="color:#babed8;">        }</span></span>
<span class="line"><span style="color:#babed8;">    }</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;">$test=array(1,3,6,8,2,7);</span></span>
<span class="line"><span style="color:#babed8;">BubbleSort($test);</span></span>
<span class="line"><span style="color:#babed8;">var_dump($test);</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_30、请举例说明在你的开发过程中用什么方法来加快页面的加载速度" tabindex="-1">30、请举例说明在你的开发过程中用什么方法来加快页面的加载速度 <a class="header-anchor" href="#_30、请举例说明在你的开发过程中用什么方法来加快页面的加载速度" aria-label="Permalink to &quot;30、请举例说明在你的开发过程中用什么方法来加快页面的加载速度&quot;">​</a></h2><p>要用到服务器资源时才打开，及时关闭服务器资源，数据库添加索引，页面可生成静态，图片等大文件单独服务器。使用代码优化工具。</p><h2 id="_31、-以下的代码会产生什么-为什么" tabindex="-1">31、.以下的代码会产生什么？为什么？ <a class="header-anchor" href="#_31、-以下的代码会产生什么-为什么" aria-label="Permalink to &quot;31、.以下的代码会产生什么？为什么？&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">$num =10;</span></span>
<span class="line"><span style="color:#babed8;">function multiply(){</span></span>
<span class="line"><span style="color:#babed8;">    $num =$num *10;</span></span>
<span class="line"><span style="color:#babed8;">}</span></span>
<span class="line"><span style="color:#babed8;">multiply();</span></span>
<span class="line"><span style="color:#babed8;">echo $num;</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>由于函式 multiply() 没有指定 $num 为全域变量（例如 global $num 或者 $_GLOBALS[&#39;num&#39;]），所以 $num 的值是 10。</p><h2 id="http协议中get、post和head的区别" tabindex="-1">HTTP协议中GET、POST和HEAD的区别？ <a class="header-anchor" href="#http协议中get、post和head的区别" aria-label="Permalink to &quot;HTTP协议中GET、POST和HEAD的区别？&quot;">​</a></h2><ul><li>HEAD： 只请求页面的首部。</li><li>GET： 请求指定的页面信息，并返回实体主体。</li><li>POST： 请求服务器接受所指定的文档作为对所标识的URI的新的从属实体。</li></ul><p>（1）HTTP 定义了与服务器交互的不同方法，最基本的方法是 GET 和 POST。事实上 GET 适用于多数请求，而保留 POST 仅用于更新站点。</p><p>（2）在FORM提交的时候，如果不指定Method，则默认为GET请 求，Form中提交的数据将会附加在url之后，以?分开与url分开。字母数字字符原样发送，但空格转换为“+“号，其它符号转换为%XX,其中XX为 该符号以16进制表示的ASCII（或ISO Latin-1）值。GET请求请提交的数据放置在HTTP请求协议头中，而POST提交的数据则放在实体数据中；</p><p>GET方式提交的数据最多只能有1024字节，而POST则没有此限制。</p><p>（3）GET 这个是浏览器用语向服务器请求最常用的方法。POST这个方法也是用来传送数据的，但是与GET不同的是，使用POST的时候，数据不是附在URI后面传递的，而是要做为独立的行来传递，此时还必须要发送一个Content_length标题，以标明数据长度，随后一个空白行，然后就是实际传送的数据。网页的表单通常是用POST来传送的。</p>`,135);function M(I,O,j,D,A,R){return n(),e("div",null,[o,a("h2",i,[l("对于用户输入一串字符串"),a("mjx-container",r,[(n(),e("svg",c,b)),h]),l("string中只能包含大于0的数字和英文逗号，请用正则 表达式验证，对于不符合要求的$string返回出错信息 "),u]),y,a("h2",m,[a("mjx-container",Q,[(n(),e("svg",T,f)),$]),l("_POST、"),a("mjx-container",_,[(n(),e("svg",q,k)),P]),l("_COOKIE、"),a("mjx-container",w,[(n(),e("svg",v,H)),C]),l("_FILES 的意思是什么？ "),E]),L])}const V=p(t,[["render",M]]);export{B as __pageData,V as default};
