import{_ as e,o as a,c,Q as i}from"./chunks/framework.aaef0e9b.js";const f=JSON.parse('{"title":"redis/memcache缓存","description":"","frontmatter":{},"headers":[],"relativePath":"问答/专题/缓存/redis和memcache缓存.mm.md","lastUpdated":1683280071000}'),s={name:"问答/专题/缓存/redis和memcache缓存.mm.md"},t=i('<h1 id="redis-memcache缓存" tabindex="-1">redis/memcache缓存 <a class="header-anchor" href="#redis-memcache缓存" aria-label="Permalink to &quot;redis/memcache缓存&quot;">​</a></h1><ul><li>Redis 依赖客户端来实现分布式读写</li><li>Memcache 本身没有数据冗余机制</li><li>Redis 支持持久化(快照、AOF),依赖快照进行持久化,aof 增强了可靠性的同时,对性能有所影响</li><li>Memcache 不支持持久化,通常做缓存,提升性能;</li><li>Memcache在并发场景下,用cas保证一致性,redis事务支持比较弱,只能保证事务中的每个操作连续执行</li><li>Redis 支持多种类的数据类型</li><li>Redis 用于数据量较小的高性能操作和运算上</li><li>Memcache 用于在动态系统中减少数据库负载,提升性能;适合做缓存,提高性能</li></ul>',2),m=[t];function r(l,_,d,o,h,n){return a(),c("div",null,m)}const u=e(s,[["render",r]]);export{f as __pageData,u as default};
