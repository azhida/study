import{_ as a,o as e,c as t,Q as r}from"./chunks/framework.aaef0e9b.js";const u=JSON.parse('{"title":"PHP 如何处理高并发问题","description":"","frontmatter":{},"headers":[],"relativePath":"问答/专题/高并发/PHP如何处理高并发问题.md","lastUpdated":1683280071000}'),o={name:"问答/专题/高并发/PHP如何处理高并发问题.md"},p=r('<h1 id="php-如何处理高并发问题" tabindex="-1">PHP 如何处理高并发问题 <a class="header-anchor" href="#php-如何处理高并发问题" aria-label="Permalink to &quot;PHP 如何处理高并发问题&quot;">​</a></h1><p>原文地址：<a href="https://www.php.cn/php-ask-450429.html" target="_blank" rel="noreferrer">php如何处理高并发问题</a></p><p>php处理高并发问题一般有以下几种方法：</p><h2 id="_1、应用和静态资源分离" tabindex="-1">1、应用和静态资源分离 <a class="header-anchor" href="#_1、应用和静态资源分离" aria-label="Permalink to &quot;1、应用和静态资源分离&quot;">​</a></h2><p>将静态资源（js，css，图片等）放到专门的服务器中。</p><h2 id="_2、页面缓存" tabindex="-1">2、页面缓存 <a class="header-anchor" href="#_2、页面缓存" aria-label="Permalink to &quot;2、页面缓存&quot;">​</a></h2><p>将应用生成的页面缓存起来可以节省大量cpu资源。对于部分页面经常变换数据的，可以使用ajax来处理。</p><h2 id="_3、集群和分布式" tabindex="-1">3、集群和分布式 <a class="header-anchor" href="#_3、集群和分布式" aria-label="Permalink to &quot;3、集群和分布式&quot;">​</a></h2><p>集群，多台服务器具有相同的功能，主要起分流的作用。分布式，将不同的业务放到不同的服务器中，处理一个请求可能需要多台服务器，进而提高一个请求的处理速度。又分为静态资源集群和应用程序集群。后者较复杂，经常要考虑session同步等问题。</p><h2 id="_4、反向代理" tabindex="-1">4、反向代理 <a class="header-anchor" href="#_4、反向代理" aria-label="Permalink to &quot;4、反向代理&quot;">​</a></h2><p>客户端直接访问的服务器并不是直接提供服务的服务器，它从别的服务器获取资源，然后将结果返回给用户。</p><p>代理服务器和反向代理服务器：</p><p>代理服务器是代我们访获取资源，然后将结果返回。例如，访问外网的代理服务器。<br> 反向代理服务器是我们正常访问一台服务器的时候，服务器自己调用了别的服务器。</p><p>代理服务器我们主动使用，是为我们服务的，不需要有自己的域名；<br> 反向代理是服务器自己使用的，我们并不知道，有自己的域名。</p><h2 id="_5、cdn" tabindex="-1">5、CDN <a class="header-anchor" href="#_5、cdn" aria-label="Permalink to &quot;5、CDN&quot;">​</a></h2><p>CDN是一种特殊的集群页面缓冲服务器，和普通的集群的多台页面缓冲服务器相比主要区别是：其存放位置和分配请求方式不同。</p><p>CDN的服务器分布在全国各地，接收到请求后会将请求分配到最合适的CDN服务器节点来获取数据。其每一个CDN节点就是一个页面缓存服务器。</p>',17),_=[p];function h(n,s,i,c,l,d){return e(),t("div",null,_)}const b=a(o,[["render",h]]);export{u as __pageData,b as default};
