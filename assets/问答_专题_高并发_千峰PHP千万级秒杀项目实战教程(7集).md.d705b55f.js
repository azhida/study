import{_ as l,o as a,c as i,Q as e}from"./chunks/framework.aaef0e9b.js";const q=JSON.parse('{"title":"千峰PHP千万级秒杀项目实战教程(7集)","description":"","frontmatter":{},"headers":[],"relativePath":"问答/专题/高并发/千峰PHP千万级秒杀项目实战教程(7集).md","lastUpdated":1683280071000}'),t={name:"问答/专题/高并发/千峰PHP千万级秒杀项目实战教程(7集).md"},r=e('<h1 id="千峰php千万级秒杀项目实战教程-7集" tabindex="-1">千峰PHP千万级秒杀项目实战教程(7集) <a class="header-anchor" href="#千峰php千万级秒杀项目实战教程-7集" aria-label="Permalink to &quot;千峰PHP千万级秒杀项目实战教程(7集)&quot;">​</a></h1><h2 id="_1、课程简介" tabindex="-1">1、课程简介 <a class="header-anchor" href="#_1、课程简介" aria-label="Permalink to &quot;1、课程简介&quot;">​</a></h2><h3 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h3><ul><li>脱离原站点部署（不能影响原来正常运行的站点）</li><li>预测，测试，监控 <ul><li>预测：人员分布，流量分布等等</li><li>测试：测压，测流程测流逻辑等</li><li>监控：实时监控各项数据性能，外部流量入侵等不可预知的事件</li></ul></li></ul><h3 id="关键点" tabindex="-1">关键点 <a class="header-anchor" href="#关键点" aria-label="Permalink to &quot;关键点&quot;">​</a></h3><ul><li>高可用：双活 <ul><li>阿里云不支持双活</li></ul></li><li>高并发：负载均衡，数据过滤 <ul><li>负载均衡：阿里云有提供</li><li>数据过滤：减少数据发送传输，只传输必要的数据，做到极简</li></ul></li></ul><h3 id="设计思路" tabindex="-1">设计思路 <a class="header-anchor" href="#设计思路" aria-label="Permalink to &quot;设计思路&quot;">​</a></h3><ul><li>静态页面：cdn，网址隐藏，页面压缩，缓存机制 <ul><li>页面压缩：合适压缩度，不能过分</li></ul></li><li>动态页面：排队，异步，资质抢购</li></ul><h2 id="_2、设计思路" tabindex="-1">2、设计思路 <a class="header-anchor" href="#_2、设计思路" aria-label="Permalink to &quot;2、设计思路&quot;">​</a></h2><h3 id="设计分析" tabindex="-1">设计分析 <a class="header-anchor" href="#设计分析" aria-label="Permalink to &quot;设计分析&quot;">​</a></h3><ul><li>用户：量大，坏人</li><li>地域：全国/地区</li><li>业务流程：前台、后台</li></ul><h3 id="设计分层" tabindex="-1">设计分层 <a class="header-anchor" href="#设计分层" aria-label="Permalink to &quot;设计分层&quot;">​</a></h3><ul><li>第一层：商品展示层 <ul><li>秒杀是否开始，未开始则进入秒杀倒计时页面，</li><li>秒杀已开启，则判断商品是否已售罄，售罄则进入秒杀完成页面【秒杀结束】</li><li>商品未售罄，则带有秒杀按钮跳转页面，进入第二层</li></ul></li><li>第二层：用户登记层 <ul><li>检测当前用户是否已提交过数据，已提交则提示当前用户秒杀结束【秒杀结束】</li><li>向后台提交数据进行校验，校验不通过则向页面反馈数据不合格</li><li>校验通过，进入第三层</li></ul></li><li>第三层：数据接入层 <ul><li>先将数据存入 nosql 缓存中，缓存失败，则向页面返回数据异常</li><li>缓存成功，判断 是否达到商品销售最大值，即库存是否足够，</li><li>无库存，则返回商品售罄</li><li>有库存，进入第四层</li></ul></li><li>第四层：数据处理层 <ul><li>将 nosql 中的数据持久化存入数据库中，改变用户状态，改变库存，</li><li>完成秒杀，异步通知用户【如果页面还打开着】</li></ul></li></ul><h2 id="_3、第一层代码分析" tabindex="-1">3、第一层代码分析 <a class="header-anchor" href="#_3、第一层代码分析" aria-label="Permalink to &quot;3、第一层代码分析&quot;">​</a></h2><ul><li>秒杀第一层 <ul><li>用户宣传落地页 <ul><li>知识点</li><li>特点</li><li>构想</li><li>具体实施</li></ul></li></ul></li></ul><h2 id="_4、第二、三、四层代码分析" tabindex="-1">4、第二、三、四层代码分析 <a class="header-anchor" href="#_4、第二、三、四层代码分析" aria-label="Permalink to &quot;4、第二、三、四层代码分析&quot;">​</a></h2><h2 id="_5、第一层代码实现讲解" tabindex="-1">5、第一层代码实现讲解 <a class="header-anchor" href="#_5、第一层代码实现讲解" aria-label="Permalink to &quot;5、第一层代码实现讲解&quot;">​</a></h2>',17),o=[r];function h(u,n,_,d,s,c){return a(),i("div",null,o)}const b=l(t,[["render",h]]);export{q as __pageData,b as default};
