import{_ as a,c as o,o as t,a3 as r}from"./chunks/framework.D_jhnXES.js";const f=JSON.parse('{"title":"Copilot","description":"","frontmatter":{},"headers":[],"relativePath":"VSCode/Copilot/index.md","filePath":"VSCode/Copilot/index.md","lastUpdated":1749545891000}'),d={name:"VSCode/Copilot/index.md"};function i(p,e,l,n,c,s){return t(),o("div",null,e[0]||(e[0]=[r('<h1 id="copilot" tabindex="-1">Copilot <a class="header-anchor" href="#copilot" aria-label="Permalink to &quot;Copilot&quot;">​</a></h1><p>跟 AI 交互，实现功能。</p><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><p>写在前面！</p><p>为了防止本地（宿主机）被安装各种依赖，导致当前环境被破坏，可以起一个 docker 容器，然后使用 vscode 连接到容器内部，再让AI来写代码，确认AI的代码可以用了，再拿出来，然后安装对应的服务或者环境。</p><p>见 <a href="./vscode创建连接docker容器">vscode 创建和连接 docker 容器</a></p><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><p><a href="./pptx合成视频">pptx合成视频</a></p>',8)]))}const m=a(d,[["render",i]]);export{f as __pageData,m as default};
