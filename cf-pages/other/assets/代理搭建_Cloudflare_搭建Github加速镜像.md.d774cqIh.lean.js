import{_ as i,c as a,o as e,a3 as l}from"./chunks/framework.Bf7f-acG.js";const E=JSON.parse('{"title":"搭建Github加速镜像","description":"","frontmatter":{},"headers":[],"relativePath":"代理搭建/Cloudflare/搭建Github加速镜像.md","filePath":"代理搭建/Cloudflare/搭建Github加速镜像.md","lastUpdated":1746496452000}'),n={name:"代理搭建/Cloudflare/搭建Github加速镜像.md"};function h(t,s,k,p,r,d){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="搭建github加速镜像" tabindex="-1">搭建Github加速镜像 <a class="header-anchor" href="#搭建github加速镜像" aria-label="Permalink to &quot;搭建Github加速镜像&quot;">​</a></h1><h2 id="前置条件" tabindex="-1">前置条件 <a class="header-anchor" href="#前置条件" aria-label="Permalink to &quot;前置条件&quot;">​</a></h2><h3 id="注册登录-cloudflare" tabindex="-1">注册登录 Cloudflare <a class="header-anchor" href="#注册登录-cloudflare" aria-label="Permalink to &quot;注册登录 Cloudflare&quot;">​</a></h3><p><a href="https://dash.cloudflare.com" target="_blank" rel="noreferrer">https://dash.cloudflare.com</a></p><h3 id="添加域名" tabindex="-1">添加域名 <a class="header-anchor" href="#添加域名" aria-label="Permalink to &quot;添加域名&quot;">​</a></h3><p>如 demo.cn 为 根域名。</p><h2 id="解析一个二级域名" tabindex="-1">解析一个二级域名 <a class="header-anchor" href="#解析一个二级域名" aria-label="Permalink to &quot;解析一个二级域名&quot;">​</a></h2><p><code>github.demo.cn</code> 是我们要制作的github镜像的访问地址。</p><ul><li>进入域名 <code>demo.cn</code> 下操作</li><li>点击 <code>DNS/Records</code></li><li>点击 <code>Add record</code> , 填上对应参数 <ul><li>Type：A</li><li>Name：github</li><li>IPv4 address：随便填一个有效的 ip 地址即可，因为不会真的解析到这个地址</li></ul></li><li>点击 <code>Save</code></li></ul><h2 id="创建一个-worker" tabindex="-1">创建一个 Worker <a class="header-anchor" href="#创建一个-worker" aria-label="Permalink to &quot;创建一个 Worker&quot;">​</a></h2><ul><li>点击 <code>Workers &amp; Pages/Overview</code></li><li>点击 <code>Create an application</code></li><li>点击 <code>Workers/Create Worker</code></li><li>在创建 Worker 页面填写 Name 为 <code>github</code> ，然后点击 <code>Deploy</code></li><li>进入 Worker 信息页面，点击 <code>Edit Code</code> 编写代码</li><li>代码如下</li></ul><p>worker.js</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TELEGRAPH_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;github.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fetch&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.request))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handleRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request.url);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url.host </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TELEGRAPH_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">https</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">:</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\/\\/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> modifiedRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    headers: request.headers,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    method: request.method,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    body: request.body,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    redirect: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;follow&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(modifiedRequest);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> modifiedResponse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(response.body, response);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 添加允许跨域访问的响应头</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  modifiedResponse.headers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Access-Control-Allow-Origin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modifiedResponse;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>点击 右上角按钮 <code>Deploy</code> ，保存并发布</li><li>回到 Worker 信息页面</li><li>点击 <code>Setting/Triggers</code></li><li>点击 <code>Add route</code>，填上如下信息 <ul><li>Route：<code>*.demo.cn/*</code> 或者 <code>*github.demo.cn/*</code></li><li>Zone：<code>demo.cn</code></li><li>点击 <code>Add route</code> 确认保存</li></ul></li></ul><h2 id="访问镜像地址" tabindex="-1">访问镜像地址 <a class="header-anchor" href="#访问镜像地址" aria-label="Permalink to &quot;访问镜像地址&quot;">​</a></h2><p><a href="https://github.demo.cn" target="_blank" rel="noreferrer">github 镜像地址</a></p><p>到此，访问应该成功了！</p><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h2><ul><li>镜像不支持登录注册。</li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://zhuanlan.zhihu.com/p/687822231" target="_blank" rel="noreferrer">用Cloudflare搭建Github加速镜像</a></p>`,21)]))}const c=i(n,[["render",h]]);export{E as __pageData,c as default};
