import{_ as s,c as n,o as e,a3 as t}from"./chunks/framework.Bf7f-acG.js";const u=JSON.parse('{"title":"腾讯云服务器端口开发笔记","description":"","frontmatter":{},"headers":[],"relativePath":"第三方平台/腾讯云/腾讯云服务器端口发放笔记.md","filePath":"第三方平台/腾讯云/腾讯云服务器端口发放笔记.md","lastUpdated":1746496452000}'),p={name:"第三方平台/腾讯云/腾讯云服务器端口发放笔记.md"};function l(i,a,c,d,o,r){return e(),n("div",null,a[0]||(a[0]=[t(`<h1 id="腾讯云服务器端口开发笔记" tabindex="-1">腾讯云服务器端口开发笔记 <a class="header-anchor" href="#腾讯云服务器端口开发笔记" aria-label="Permalink to &quot;腾讯云服务器端口开发笔记&quot;">​</a></h1><p>80 端口为示例，环境：centOS7.6</p><ul><li>问题描述：</li></ul><p>服务器安全组已经放行 80 端口，但 cmd 访问失败</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># telnet [IP] 80</span></span>
<span class="line"><span>telnet 10.1.1.1 80</span></span></code></pre></div><h2 id="排查" tabindex="-1">排查 <a class="header-anchor" href="#排查" aria-label="Permalink to &quot;排查&quot;">​</a></h2><ul><li>登录服务器，执行</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 查看 防火墙</span></span>
<span class="line"><span>firewall-cmd --state</span></span>
<span class="line"><span># not running 说明 防火墙未启动，要先启动防火墙</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 启动防火墙</span></span>
<span class="line"><span>systemctl start firewalld</span></span>
<span class="line"><span>firewall-cmd --state</span></span>
<span class="line"><span># running 说明防火墙正在运行中</span></span></code></pre></div><ul><li>cmd 窗口执行</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>telnet 10.1.1.1 80</span></span></code></pre></div><p>连接成功</p>`,11)]))}const m=s(p,[["render",l]]);export{u as __pageData,m as default};
