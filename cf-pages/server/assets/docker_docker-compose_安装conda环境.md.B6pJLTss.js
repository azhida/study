import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.CJNr4pYi.js";const g=JSON.parse('{"title":"docker compose 安装 conda 环境","description":"","frontmatter":{},"headers":[],"relativePath":"docker/docker-compose/安装conda环境.md","filePath":"docker/docker-compose/安装conda环境.md","lastUpdated":1749546383000}'),p={name:"docker/docker-compose/安装conda环境.md"},e=n(`<h1 id="docker-compose-安装-conda-环境" tabindex="-1">docker compose 安装 conda 环境 <a class="header-anchor" href="#docker-compose-安装-conda-环境" aria-label="Permalink to &quot;docker compose 安装 conda 环境&quot;">​</a></h1><ul><li>docker-compose.yaml</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3.8&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  conda-app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">continuumio/miniconda3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 指定镜像名称</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">conda-app</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 指定容器名称</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    working_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/app</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.:/app</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 挂载当前目录到容器中的 /app 目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/app/test-dir</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 挂载时排除指定目录：test-dir</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    tty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div>`,3),t=[e];function l(k,h,d,o,r,c){return a(),i("div",null,t)}const y=s(p,[["render",l]]);export{g as __pageData,y as default};
