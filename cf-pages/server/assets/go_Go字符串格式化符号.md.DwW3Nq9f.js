import{_ as t,c as d,o as r,a5 as o}from"./chunks/framework.CJNr4pYi.js";const P=JSON.parse('{"title":"Go 字符串格式化符号","description":"","frontmatter":{},"headers":[],"relativePath":"go/Go字符串格式化符号.md","filePath":"go/Go字符串格式化符号.md","lastUpdated":1741572915000}'),u={name:"go/Go字符串格式化符号.md"},q=o('<h1 id="go-字符串格式化符号" tabindex="-1">Go 字符串格式化符号 <a class="header-anchor" href="#go-字符串格式化符号" aria-label="Permalink to &quot;Go 字符串格式化符号&quot;">​</a></h1><table tabindex="0"><thead><tr><th>格式化符号</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>通用格式</td><td></td><td></td></tr><tr><td>%v</td><td>以默认格式输出变量</td><td>fmt.Printf(&quot;%v&quot;, 42)</td></tr><tr><td>%+v</td><td>对结构体加字段名的方式输出</td><td>fmt.Printf(&quot;%+v&quot;, struct{A int}{A: 42})</td></tr><tr><td>%#v</td><td>以 Go 语法格式化输出</td><td>fmt.Printf(&quot;%#v&quot;, map[string]int{&quot;a&quot;: 1})</td></tr><tr><td>%T</td><td>输出值的类型</td><td>fmt.Printf(&quot;%T&quot;, 42)</td></tr><tr><td>%%</td><td>输出百分号</td><td>fmt.Printf(&quot;%%&quot;)</td></tr><tr><td>布尔值</td><td></td><td></td></tr><tr><td>%t</td><td>输出 true 或 false</td><td>fmt.Printf(&quot;%t&quot;, true)</td></tr><tr><td>整数</td><td></td><td></td></tr><tr><td>%b</td><td>二进制表示</td><td>fmt.Printf(&quot;%b&quot;, 5)</td></tr><tr><td>%c</td><td>Unicode 对应字符</td><td>fmt.Printf(&quot;%c&quot;, 65)</td></tr><tr><td>%d</td><td>十进制表示</td><td>fmt.Printf(&quot;%d&quot;, 42)</td></tr><tr><td>%o</td><td>八进制表示</td><td>fmt.Printf(&quot;%o&quot;, 10)</td></tr><tr><td>%x</td><td>十六进制表示（小写字母）</td><td>fmt.Printf(&quot;%x&quot;, 15)</td></tr><tr><td>%X</td><td>十六进制表示（大写字母）</td><td>fmt.Printf(&quot;%X&quot;, 15)</td></tr><tr><td>%U</td><td>Unicode 格式输出</td><td>fmt.Printf(&quot;%U&quot;, 65)</td></tr><tr><td>浮点数</td><td></td><td></td></tr><tr><td>%f</td><td>十进制浮点数</td><td>fmt.Printf(&quot;%f&quot;, 3.14)</td></tr><tr><td>%e</td><td>科学计数法（小写 e）</td><td>fmt.Printf(&quot;%e&quot;, 3.14)</td></tr><tr><td>%E</td><td>科学计数法（大写 E）</td><td>fmt.Printf(&quot;%E&quot;, 3.14)</td></tr><tr><td>%g</td><td>自动选择 %f 或 %e 的简洁表示</td><td>fmt.Printf(&quot;%g&quot;, 3.14)</td></tr><tr><td>字符串与字节</td><td></td><td></td></tr><tr><td>%s</td><td>普通字符串</td><td>fmt.Printf(&quot;%s&quot;, &quot;Go&quot;)</td></tr><tr><td>%q</td><td>带双引号的字符串或字符</td><td>fmt.Printf(&quot;%q&quot;, &quot;Go&quot;)</td></tr><tr><td>%x</td><td>每个字节用两字符十六进制表示</td><td>fmt.Printf(&quot;%x&quot;, &quot;abc&quot;)</td></tr><tr><td>%X</td><td>十六进制（大写）表示</td><td>fmt.Printf(&quot;%X&quot;, &quot;abc&quot;)</td></tr><tr><td>指针</td><td></td><td></td></tr><tr><td>%p</td><td>指针地址</td><td>fmt.Printf(&quot;%p&quot;, &amp;x)</td></tr></tbody></table>',2),f=[q];function e(n,a,i,_,m,s){return r(),d("div",null,f)}const h=t(u,[["render",e]]);export{P as __pageData,h as default};
