import{_ as a,c as s,o as i,a5 as e}from"./chunks/framework.CJNr4pYi.js";const m=JSON.parse('{"title":"Go语言ORM","description":"","frontmatter":{},"headers":[],"relativePath":"go/Go语言ORM.md","filePath":"go/Go语言ORM.md","lastUpdated":1722327281000}'),t={name:"go/Go语言ORM.md"},o=e(`<h1 id="go语言orm" tabindex="-1">Go语言ORM <a class="header-anchor" href="#go语言orm" aria-label="Permalink to &quot;Go语言ORM&quot;">​</a></h1><p>比较好的Go语言ORM包括： xorm 与 gorm</p><h2 id="xorm" tabindex="-1">XORM <a class="header-anchor" href="#xorm" aria-label="Permalink to &quot;XORM&quot;">​</a></h2><p>xorm 是一个Go语言的ORM库，通过它可以很方便的操作数据库。它的设计重点是高性能和易用性。XORM支持多种数据库，包括 MySQL、PostgreSQL、SQLite、Oracle 和 SQL Server，并提供了丰富的查询语言。XORM还支持事务和缓存机制，可以提高数据库操作的性能。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加依赖：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/go-xorm/xorm</span></span></code></pre></div><h2 id="gorm" tabindex="-1">GORM <a class="header-anchor" href="#gorm" aria-label="Permalink to &quot;GORM&quot;">​</a></h2><p>GORM 是 Go 语言中最受欢迎的ORM框架之一。它具有易于使用的API和灵活的查询语言，支持多种类型的数据库，包括 MySQL、PostgreSQL、SQLite和SQL Server。 GORM 还提供了自动迁移功能，可以在应用程序启动时自动创建数据库表和字段。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gorm.io/gorm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gorm.io/driver/mysql</span></span></code></pre></div><p><a href="https://learnku.com/docs/gorm/v2" target="_blank" rel="noreferrer">GORM 中文文档</a></p><h2 id="区别" tabindex="-1">区别 <a class="header-anchor" href="#区别" aria-label="Permalink to &quot;区别&quot;">​</a></h2><ul><li>查询语言：GORM使用链式查询语法，而XORM使用结构体作为查询条件。XORM的查询语言更为灵活，可以支持更复杂的查询。</li><li>性能：XORM的性能比GORM更高，在大量数据的情况下，XORM能够更快地进行数据库操作。</li><li>易用性：GORM的API比XORM更易用，特别是对于没有ORM经验的开发者来说。</li><li>社区支持：GORM的社区比XORM更大，因此有更多的文档、示例和插件可以使用。</li></ul>`,11),l=[o];function r(n,h,p,d,c,g){return i(),s("div",null,l)}const M=a(t,[["render",r]]);export{m as __pageData,M as default};
