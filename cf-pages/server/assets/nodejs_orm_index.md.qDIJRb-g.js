import{_ as e,c as a,o as r,a5 as i}from"./chunks/framework.CJNr4pYi.js";const k=JSON.parse('{"title":"NodeJS ORM","description":"","frontmatter":{},"headers":[],"relativePath":"nodejs/orm/index.md","filePath":"nodejs/orm/index.md","lastUpdated":1744254179000}'),l={name:"nodejs/orm/index.md"},t=i('<h1 id="nodejs-orm" tabindex="-1">NodeJS ORM <a class="header-anchor" href="#nodejs-orm" aria-label="Permalink to &quot;NodeJS ORM&quot;">​</a></h1><h2 id="prisma-orm" tabindex="-1">Prisma ORM <a class="header-anchor" href="#prisma-orm" aria-label="Permalink to &quot;Prisma ORM&quot;">​</a></h2><ul><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.prisma.io%2F" target="_blank" rel="noreferrer">官网</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.prisma.io%2Fdocs%2Fgetting-started" target="_blank" rel="noreferrer">文档</a></li></ul><h3 id="prisma-特性" tabindex="-1">Prisma 特性 <a class="header-anchor" href="#prisma-特性" aria-label="Permalink to &quot;Prisma 特性&quot;">​</a></h3><ul><li>基于 TypeScript 类型安全，自动生成操作数据 API</li><li>自创了 Prisma.schema PSL 文件，简洁明了（目前已经支持多文件）</li><li>多数据库抽象支持，无需关注底层</li><li>良好的 CLI 命令支持，自动化迁移（不是数据库之间）</li><li>良好的文档和社区支持</li></ul><h3 id="primsa-使用流程" tabindex="-1">Primsa 使用流程 <a class="header-anchor" href="#primsa-使用流程" aria-label="Permalink to &quot;Primsa 使用流程&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>prisma -&gt; init -&gt; schema -&gt; migrate -&gt; 使用 primsa 客户客户端操作数据库。</span></span></code></pre></div><h2 id="typeorm" tabindex="-1">TypeORM <a class="header-anchor" href="#typeorm" aria-label="Permalink to &quot;TypeORM&quot;">​</a></h2><ul><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Ftypeorm.io%2F" target="_blank" rel="noreferrer">官网</a></li></ul><h3 id="typeorm-特性" tabindex="-1">TypeORM 特性 <a class="header-anchor" href="#typeorm-特性" aria-label="Permalink to &quot;TypeORM 特性&quot;">​</a></h3><ul><li>基于 TypeScript 类型安全，支持 JavaScript/ESM, Class 实体、语法灵活</li><li>支持 DataMapper 和 ActiveRecord 两种模式</li><li>直接关系模型（关联，单项、双向、自引用、连接）</li><li>连接池、支持过数据库实例</li><li>多数据库支持</li><li>自动迁移和生成迁移文件</li></ul><h2 id="sequelize" tabindex="-1">Sequelize <a class="header-anchor" href="#sequelize" aria-label="Permalink to &quot;Sequelize&quot;">​</a></h2><ul><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fsequelize.org%2F" target="_blank" rel="noreferrer">官网</a></li></ul><h3 id="sequelize-特性" tabindex="-1">Sequelize 特性 <a class="header-anchor" href="#sequelize-特性" aria-label="Permalink to &quot;Sequelize 特性&quot;">​</a></h3><ul><li>TypeScript 和 Node.js ORM 数据库支持</li><li>多种数据库支持，支持事务</li></ul><h2 id="mongoose-odm" tabindex="-1">Mongoose (ODM) <a class="header-anchor" href="#mongoose-odm" aria-label="Permalink to &quot;Mongoose (ODM)&quot;">​</a></h2><ul><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fmongoosejs.com%2F" target="_blank" rel="noreferrer">官网</a></li></ul><h2 id="drizzle" tabindex="-1">drizzle <a class="header-anchor" href="#drizzle" aria-label="Permalink to &quot;drizzle&quot;">​</a></h2><ul><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Form.drizzle.team%2F" target="_blank" rel="noreferrer">官网</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Form.drizzle.team%2Fdocs%2Foverview" target="_blank" rel="noreferrer">文档</a></li></ul><h3 id="drizzle-特性" tabindex="-1">drizzle 特性 <a class="header-anchor" href="#drizzle-特性" aria-label="Permalink to &quot;drizzle 特性&quot;">​</a></h3><ul><li>Drizzle ORM 是一个有头的无头 TypeScript ORM 🐲</li><li>如果您了解 SQL，那么您就了解 Drizzle。</li><li>支持主流的数据库和 serverless</li></ul><h2 id="mikro-orm" tabindex="-1">mikro-orm <a class="header-anchor" href="#mikro-orm" aria-label="Permalink to &quot;mikro-orm&quot;">​</a></h2><ul><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fmikro-orm.io%2F" target="_blank" rel="noreferrer">官网</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fmikro-orm.io%2Fdocs%2Fquick-start" target="_blank" rel="noreferrer">文档</a></li></ul><h3 id="mikro-orm-特性" tabindex="-1">mikro-orm 特性 <a class="header-anchor" href="#mikro-orm-特性" aria-label="Permalink to &quot;mikro-orm 特性&quot;">​</a></h3><ul><li>Node.js 的 TypeScript ORM 基于数据映射器、工作单元和身份映射模式。</li><li>支持主流的数据库</li></ul><h2 id="knex-js" tabindex="-1">Knex.js <a class="header-anchor" href="#knex-js" aria-label="Permalink to &quot;Knex.js&quot;">​</a></h2><ul><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fknexjs.org%2F" target="_blank" rel="noreferrer">官网</a></li><li><a href="https://knex.nodejs.cn/guide/" target="_blank" rel="noreferrer">中文网</a></li></ul><h3 id="knex-js-特性" tabindex="-1">Knex.js 特性 <a class="header-anchor" href="#knex-js-特性" aria-label="Permalink to &quot;Knex.js 特性&quot;">​</a></h3><ul><li>定位是 基于 JavaScript 的 SQL 查询生成器。</li><li>主流的数据库均支持、支持 TypeScript。</li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://blog.csdn.net/CTZL123456/article/details/139534316" target="_blank" rel="noreferrer">Node.js 生态数据操作库和 ORM 大盘点</a></li></ul>',31),o=[t];function n(s,h,d,u,c,m){return r(),a("div",null,o)}const b=e(l,[["render",n]]);export{k as __pageData,b as default};
