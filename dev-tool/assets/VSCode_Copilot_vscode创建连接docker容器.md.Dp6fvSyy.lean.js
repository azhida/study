import{_ as i,c as a,o as e,a3 as p}from"./chunks/framework.D_jhnXES.js";const r=JSON.parse('{"title":"vscode 创建和连接 docker 容器","description":"","frontmatter":{},"headers":[],"relativePath":"VSCode/Copilot/vscode创建连接docker容器.md","filePath":"VSCode/Copilot/vscode创建连接docker容器.md","lastUpdated":1749606581000}'),t={name:"VSCode/Copilot/vscode创建连接docker容器.md"};function n(l,s,h,d,k,o){return e(),a("div",null,s[0]||(s[0]=[p(`<h1 id="vscode-创建和连接-docker-容器" tabindex="-1">vscode 创建和连接 docker 容器 <a class="header-anchor" href="#vscode-创建和连接-docker-容器" aria-label="Permalink to &quot;vscode 创建和连接 docker 容器&quot;">​</a></h1><h2 id="创建一个项目-pptx2video" tabindex="-1">创建一个项目 <code>pptx2video</code> <a class="header-anchor" href="#创建一个项目-pptx2video" aria-label="Permalink to &quot;创建一个项目 \`pptx2video\`&quot;">​</a></h2><p>宿主机</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pptx2video</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pptx2video</span></span></code></pre></div><h2 id="起一个-python3-9-的-docker-容器" tabindex="-1">起一个 python3.9 的 docker 容器 <a class="header-anchor" href="#起一个-python3-9-的-docker-容器" aria-label="Permalink to &quot;起一个 python3.9 的 docker 容器&quot;">​</a></h2><ul><li>docker-compose.yml</li></ul><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3.8&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  python_app_pptx2video</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">python:3.9-slim</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">python_app_pptx2video</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.:/app</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    working_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/app</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;5000:5000&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    tty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    driver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">bridge</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python_app_pptx2video</span></span></code></pre></div><h2 id="vscode-远程连接到docker容器-python-app-pptx2video" tabindex="-1">vscode 远程连接到docker容器 python_app_pptx2video <a class="header-anchor" href="#vscode-远程连接到docker容器-python-app-pptx2video" aria-label="Permalink to &quot;vscode 远程连接到docker容器 python_app_pptx2video&quot;">​</a></h2><ul><li>vscode <code>左侧菜单栏</code>，</li><li>点击 <code>远程资源管理器</code>,</li><li>远程资源管理器 选择 <code>开发容器</code></li><li>找到容器 <code>python_app_pptx2video</code>, 在 新窗口中打开，</li><li>首次进入，要先选择容器内部目录 <code>/app</code> ，</li><li>连接成功后，就可以在容器内部，问 AI ，让AI写代码，实现各种功能了。</li></ul><h2 id="注意-ai-聊天窗有三种模式" tabindex="-1">注意：AI 聊天窗有三种模式 <a class="header-anchor" href="#注意-ai-聊天窗有三种模式" aria-label="Permalink to &quot;注意：AI 聊天窗有三种模式&quot;">​</a></h2><ul><li>询问：只会在聊天窗回答，不会修改任何文件</li><li>编辑：会修改当前的文件</li><li>代理：会自动安装依赖，自动创建和修改任何文件</li></ul><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h2><ul><li>如果 <code>apt update</code> 执行速度很慢，可以让 AI 帮你切换 apt 源为 阿里云源 、 华为云源 、 腾讯云源 或者 其他你想要的源：</li></ul><p>问：<code>切换 apt 源为 华为云源</code> ，如果报错，根据提示，一步一步往下问即可。如果 AI 找不到 apt 源的配置文件在哪里，你就找到，然后告诉他：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/sources.list.d/debian.sources</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果你不确定目录，可以 输入 /etc/apt/ , 然后按 tab 键来显示后再选择</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果说不在当前目录无法写入之类的，就命令行 cd 到对应目录下，如 cd /etc/apt/sources.list.d/</span></span></code></pre></div><p>也可以直接手动换 apt 源：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;s@http://deb.debian.org@http://mirrors.aliyun.com@g&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/sources.list.d/debian.sources</span></span></code></pre></div>`,18)]))}const g=i(t,[["render",n]]);export{r as __pageData,g as default};
