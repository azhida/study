import{_ as o,o as e,c as a,Q as r}from"./chunks/framework.92222dd1.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"dev-tool/Composer/使用笔记.md","lastUpdated":1680584985000}'),s={name:"dev-tool/Composer/使用笔记.md"},c=r(`<h6 id="composer-镜像" tabindex="-1">composer 镜像 <a class="header-anchor" href="#composer-镜像" aria-label="Permalink to &quot;composer 镜像&quot;">​</a></h6><p>composer config -g repo.packagist composer <a href="https://packagist.org/" target="_blank" rel="noreferrer">https://packagist.org/</a><br> composer config -g repo.packagist composer <a href="https://packagist.laravel-china.org" target="_blank" rel="noreferrer">https://packagist.laravel-china.org</a><br> composer config -g repo.packagist composer <a href="https://packagist.phpcomposer.com" target="_blank" rel="noreferrer">https://packagist.phpcomposer.com</a><br> composer config -g repo.packagist composer <a href="https://mirrors.aliyun.com/composer/" target="_blank" rel="noreferrer">https://mirrors.aliyun.com/composer/</a></p><h6 id="更新composer依赖和自动加载" tabindex="-1">更新composer依赖和自动加载 <a class="header-anchor" href="#更新composer依赖和自动加载" aria-label="Permalink to &quot;更新composer依赖和自动加载&quot;">​</a></h6><p>composer dump-autoload</p><h6 id="composer-更新到指定版本-1-8-5" tabindex="-1">composer 更新到指定版本 1.8.5 <a class="header-anchor" href="#composer-更新到指定版本-1-8-5" aria-label="Permalink to &quot;composer 更新到指定版本 1.8.5&quot;">​</a></h6><p>composer self-update -- 1.8.5</p><ul><li>切换到 版本 1<br> composer self-update -- 1</li><li>切换到 版本 2<br> composer self-update -- 2</li></ul><h6 id="composer-安装命令格式说明" tabindex="-1">composer 安装命令格式说明 <a class="header-anchor" href="#composer-安装命令格式说明" aria-label="Permalink to &quot;composer 安装命令格式说明&quot;">​</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">composer require &quot;barryvdh/laravel-debugbar:~3.6&quot; --dev</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>版本限定符 <code>~</code> 意味着我们希望安装 <code>&gt;= 3.6</code> 并且 <code>&lt; 4.0</code> 的版本，例如 <code>3.6.1</code>、 <code>3.11.3</code>、 <code>3.8</code>。根据语义化版本的定义，次版本号的变化是新增功能，所以 API 是稳定的，也就是可以安全更新的。<br><strong>什么是语义化版本？</strong><br> 版本格式：主版本号。次版本号。修订号，如 <code>1.0.1</code>, <code>3.2.39</code>。版本号递增规则如下：</p><ul><li>主版本号：当你做了不兼容的 API 修改</li><li>次版本号：当你做了向下兼容的功能性新增</li><li>修订号：当你做了向下兼容的问题修正。</li></ul><p>另外，先行版本号及版本编译信息可以加到 <code>主版本号.次版本号.修订号</code> 的后面，作为延伸。<br> 一般我们使用 3 个部分来表示一个版本，例如：1.4.23，1 为主版本号，4 为次版本号，23 为修订号或者补丁版本号。先行版本如 <code>1.0.0-alpha1</code> 这样在后面添加修饰符号来表示。<br> 最后 Composer 安装时 --dev 参数是指明只在 开发环境 中使用，这样上线代码到 生产环境 时，我们可使用 composer install --no-dev 命令来排除这些扩展包的安装。</p>`,12),t=[c];function p(l,i,n,d,m,h){return e(),a("div",null,t)}const u=o(s,[["render",p]]);export{_ as __pageData,u as default};
