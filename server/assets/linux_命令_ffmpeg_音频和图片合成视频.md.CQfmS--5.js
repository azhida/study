import{_ as s,c as i,o as a,a5 as t}from"./chunks/framework.CJNr4pYi.js";const C=JSON.parse('{"title":"音频和图片合成视频","description":"","frontmatter":{},"headers":[],"relativePath":"linux/命令/ffmpeg/音频和图片合成视频.md","filePath":"linux/命令/ffmpeg/音频和图片合成视频.md","lastUpdated":1754619814000}'),n={name:"linux/命令/ffmpeg/音频和图片合成视频.md"},l=t(`<h1 id="音频和图片合成视频" tabindex="-1">音频和图片合成视频 <a class="header-anchor" href="#音频和图片合成视频" aria-label="Permalink to &quot;音频和图片合成视频&quot;">​</a></h1><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -loop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -framerate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> temp/test/image.png</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> temp/test/slide_4.mp3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -vf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;scale=1920:1080,format=yuv420p&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -c:v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libx264</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -preset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> veryfast</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -crf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -c:a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -shortest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  temp/test/final_output.mp4</span></span></code></pre></div><ul><li><code>loop 1</code>：循环读取单张图片作为视频源</li><li><code>i temp/test/slide_4.mp3</code>：指定音频输入文件</li><li><code>vf &quot;scale=1920:1080,format=yuv420p&quot;</code>：视频滤镜，缩放为 1920x1080 分辨率，格式为 yuv420p</li><li><code>c:v libx264</code>：视频编码器，使用 libx264 编码</li><li><code>preset veryfast</code>：编码速度预设，选择 veryfast 预设</li><li><code>crf 18</code>：编码质量，选择 18 的 CRF 值</li><li><code>c:a copy</code>：音频编码器，直接复制音频流</li><li><code>shortest</code>：根据最短的输入流结束编码</li><li><code>y</code>：覆盖输出文件</li><li><code>temp/test/final_output.mp4</code>：输出文件路径</li></ul>`,3),e=[l];function p(h,k,d,F,r,c){return a(),i("div",null,e)}const g=s(n,[["render",p]]);export{C as __pageData,g as default};
