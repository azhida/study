import{_ as t,c as e,o as l,a5 as a}from"./chunks/framework.CJNr4pYi.js";const c=JSON.parse('{"title":"Laravel 使用笔记","description":"","frontmatter":{},"headers":[],"relativePath":"php/laravel/知识/Laravel使用笔记.md","filePath":"php/laravel/知识/Laravel使用笔记.md","lastUpdated":1722327281000}'),d={name:"php/laravel/知识/Laravel使用笔记.md"},r=a('<h1 id="laravel-使用笔记" tabindex="-1">Laravel 使用笔记 <a class="header-anchor" href="#laravel-使用笔记" aria-label="Permalink to &quot;Laravel 使用笔记&quot;">​</a></h1><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><ul><li>新建一个名为 <code>Laravel</code> 的项目</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>composer create-project laravel/laravel Laravel --prefer-dist &quot;8.*&quot;</span></span></code></pre></div><h2 id="laravel-文件夹结构简介" tabindex="-1">Laravel 文件夹结构简介 <a class="header-anchor" href="#laravel-文件夹结构简介" aria-label="Permalink to &quot;Laravel 文件夹结构简介&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">文件夹名称</th><th style="text-align:left;">简介</th></tr></thead><tbody><tr><td style="text-align:left;">app</td><td style="text-align:left;">应用程序的业务逻辑代码存放文件夹</td></tr><tr><td style="text-align:left;">app/Console</td><td style="text-align:left;">存放自定义 Artisan 命令文件</td></tr><tr><td style="text-align:left;">app/Exceptions</td><td style="text-align:left;">存放应用异常文件</td></tr><tr><td style="text-align:left;">app/Http/Controllers</td><td style="text-align:left;">存放控制器文件</td></tr><tr><td style="text-align:left;">app/Http/Middleware</td><td style="text-align:left;">存放「中间件」文件</td></tr><tr><td style="text-align:left;">app/Models</td><td style="text-align:left;">存放数据模型</td></tr><tr><td style="text-align:left;">app/Providers</td><td style="text-align:left;">存放『服务提供者』文件</td></tr><tr><td style="text-align:left;">bootstrap</td><td style="text-align:left;">框架启动与自动加载设置相关的文件</td></tr><tr><td style="text-align:left;">composer.json</td><td style="text-align:left;">应用依赖的扩展包</td></tr><tr><td style="text-align:left;">composer.lock</td><td style="text-align:left;">扩展包列表，确保这个应用的副本使用相同版本的扩展包</td></tr><tr><td style="text-align:left;">config</td><td style="text-align:left;">应用程序的配置文件</td></tr><tr><td style="text-align:left;">database</td><td style="text-align:left;">数据库操作相关文件（数据库迁移和数据填充）</td></tr><tr><td style="text-align:left;">node_modules</td><td style="text-align:left;">存放 NPM 依赖模块</td></tr><tr><td style="text-align:left;">docker-compose.yml</td><td style="text-align:left;">Docker 环境 Laravel Sail 的配置文件</td></tr><tr><td style="text-align:left;">package.json</td><td style="text-align:left;">应用所需的 NPM 包配置文件</td></tr><tr><td style="text-align:left;">phpunit.xml</td><td style="text-align:left;">测试工具 PHPUnit 的配置文件</td></tr><tr><td style="text-align:left;">public</td><td style="text-align:left;">前端控制器和资源相关文件（图片、JavaScript、CSS）</td></tr><tr><td style="text-align:left;">readme.md</td><td style="text-align:left;">项目介绍说明文件</td></tr><tr><td style="text-align:left;">resources</td><td style="text-align:left;">应用资源</td></tr><tr><td style="text-align:left;">resources/js</td><td style="text-align:left;">未编译的 JavaScript 代码</td></tr><tr><td style="text-align:left;">resources/css</td><td style="text-align:left;">CSS 代码</td></tr><tr><td style="text-align:left;">resources/lang</td><td style="text-align:left;">多语言文件</td></tr><tr><td style="text-align:left;">resources/views</td><td style="text-align:left;">视图文件</td></tr><tr><td style="text-align:left;">routes/api.php</td><td style="text-align:left;">用于定义 API 类型的路由</td></tr><tr><td style="text-align:left;">routes/channels.php</td><td style="text-align:left;">事件广播注册信息</td></tr><tr><td style="text-align:left;">routes/console.php</td><td style="text-align:left;">用于定义 Artisan 命令</td></tr><tr><td style="text-align:left;">routes/web.php</td><td style="text-align:left;">用于定义 Web 类型的路由（重点，大部分情况下本书会用到）</td></tr><tr><td style="text-align:left;">server.php</td><td style="text-align:left;">使用 PHP 内置服务器时的 URL 重写（类似于 Apache 的 “mod_rewrite” ）</td></tr><tr><td style="text-align:left;">storage</td><td style="text-align:left;">编译后的视图、基于会话、文件缓存和其它框架生成的文件</td></tr><tr><td style="text-align:left;">storage/app</td><td style="text-align:left;">目录可用于存储应用程序使用的任何文件</td></tr><tr><td style="text-align:left;">storage/framework</td><td style="text-align:left;">目录被用于保存框架生成的文件及缓存</td></tr><tr><td style="text-align:left;">storage/logs</td><td style="text-align:left;">应用程序的日志文件</td></tr><tr><td style="text-align:left;">tests</td><td style="text-align:left;">应用测试相关文件</td></tr><tr><td style="text-align:left;">vendor</td><td style="text-align:left;">Composer 依赖模块</td></tr><tr><td style="text-align:left;">webpack.mix.js</td><td style="text-align:left;">Laravel 的前端工作流配置文件</td></tr><tr><td style="text-align:left;">.gitignore</td><td style="text-align:left;">被 Git 所忽略的文件</td></tr><tr><td style="text-align:left;">.env</td><td style="text-align:left;">环境变量配置文件</td></tr></tbody></table>',6),s=[r];function i(n,o,g,f,x,y){return l(),e("div",null,s)}const h=t(d,[["render",i]]);export{c as __pageData,h as default};
