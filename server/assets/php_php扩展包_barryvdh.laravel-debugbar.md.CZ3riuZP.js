import{_ as a,c as e,o as r,a3 as d}from"./chunks/framework.CFZOmcOm.js";const v=JSON.parse('{"title":"barryvdh/laravel-debugbar","description":"","frontmatter":{},"headers":[],"relativePath":"php/php扩展包/barryvdh.laravel-debugbar.md","filePath":"php/php扩展包/barryvdh.laravel-debugbar.md","lastUpdated":1722327281000}'),o={name:"php/php扩展包/barryvdh.laravel-debugbar.md"},t=d('<h1 id="barryvdh-laravel-debugbar" tabindex="-1"><a href="https://github.com/barryvdh/laravel-debugbar" target="_blank" rel="noreferrer">barryvdh/laravel-debugbar</a> <a class="header-anchor" href="#barryvdh-laravel-debugbar" aria-label="Permalink to &quot;[barryvdh/laravel-debugbar](https://github.com/barryvdh/laravel-debugbar)&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>composer require &quot;barryvdh/laravel-debugbar:~3.6&quot; --dev</span></span></code></pre></div><p>版本限定符 <code>~</code> 意味着我们希望安装 <code>&gt;= 3.6</code> 并且 <code>&lt; 4.0</code> 的版本，例如 <code>3.6.1</code>、 <code>3.11.3</code>、 <code>3.8</code>。根据语义化版本的定义，次版本号的变化是新增功能，所以 API 是稳定的，也就是可以安全更新的。</p><h2 id="什么是语义化版本" tabindex="-1">什么是语义化版本？ <a class="header-anchor" href="#什么是语义化版本" aria-label="Permalink to &quot;什么是语义化版本？&quot;">​</a></h2><p>版本格式：主版本号。次版本号。修订号，如 <code>1.0.1</code>, <code>3.2.39</code>。版本号递增规则如下：</p><ul><li>主版本号：当你做了不兼容的 API 修改</li><li>次版本号：当你做了向下兼容的功能性新增</li><li>修订号：当你做了向下兼容的问题修正。</li></ul><p>另外，先行版本号及版本编译信息可以加到 <code>主版本号.次版本号.修订号</code> 的后面，作为延伸。</p><p>一般我们使用 3 个部分来表示一个版本，例如：1.4.23，1 为主版本号，4 为次版本号，23 为修订号或者补丁版本号。先行版本如 <code>1.0.0-alpha1</code> 这样在后面添加修饰符号来表示。</p><p>最后 Composer 安装时 --dev 参数是指明只在 开发环境 中使用，这样上线代码到 生产环境 时，我们可使用 composer install --no-dev 命令来排除这些扩展包的安装。</p><h2 id="生成配置文件-存放位置-config-debugbar-php" tabindex="-1">生成配置文件，存放位置 <code>config/debugbar.php</code> <a class="header-anchor" href="#生成配置文件-存放位置-config-debugbar-php" aria-label="Permalink to &quot;生成配置文件，存放位置 `config/debugbar.php`&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>php artisan vendor:publish --provider=&quot;Barryvdh\\Debugbar\\ServiceProvider&quot;</span></span></code></pre></div>',11),l=[t];function p(c,s,i,b,h,n){return r(),e("div",null,l)}const g=a(o,[["render",p]]);export{v as __pageData,g as default};
