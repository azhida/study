import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.CJNr4pYi.js";const c=JSON.parse('{"title":"ppt转图片","description":"","frontmatter":{},"headers":[],"relativePath":"python/demo/ppt转图片.md","filePath":"python/demo/ppt转图片.md","lastUpdated":1750737351000}'),t={name:"python/demo/ppt转图片.md"},l=n(`<h1 id="ppt转图片" tabindex="-1">ppt转图片 <a class="header-anchor" href="#ppt转图片" aria-label="Permalink to &quot;ppt转图片&quot;">​</a></h1><details class="details custom-block"><summary>点击查看代码</summary><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env python3</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">将PPTX文件转换为PNG图片</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">需要安装: python-pptx和pillow包</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">安装命令: pip install python-pptx pillow</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pptx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Presentation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PIL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Image</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> io</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pptx_to_png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pptx_path, output_dir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;output&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;将PPTX每页转换为PNG图片&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.exists(pptx_path):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;错误: 文件 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pptx_path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 不存在&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 创建输出目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    os.makedirs(output_dir, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">exist_ok</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 加载PPTX文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    prs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Presentation(pptx_path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 使用LibreOffice/unoconv进行转换</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;开始转换 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pptx_path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 为PNG图片...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 转换为PDF</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        pdf_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.join(output_dir, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;temp.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;unoconv -f pdf -o </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pdf_path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pptx_path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        os.system(cmd)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.exists(pdf_path):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            raise</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Exception</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PDF转换失败&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 转换为PNG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        cmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;convert -density 150 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pdf_path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output_dir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/slide_%d.png&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        os.system(cmd)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 清理临时文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        os.remove(pdf_path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 统计生成的图片数量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        png_files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.listdir(output_dir) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f.endswith(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;转换完成，共生成 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(png_files)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 张PNG图片&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Exception</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;转换出错: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.exists(pdf_path):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            os.remove(pdf_path)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__main__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sys.argv) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;用法: python ppt2png.py [pptx文件路径] [输出目录(可选)]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sys.exit(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pptx_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.argv[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    output_dir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.argv[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sys.argv) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> else</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;output&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pptx_to_png(pptx_path, output_dir)</span></span></code></pre></div></details><h2 id="_1-文件概述" tabindex="-1">1. 文件概述 <a class="header-anchor" href="#_1-文件概述" aria-label="Permalink to &quot;1. 文件概述&quot;">​</a></h2><p><code>ppt转图片.py</code> 是一个Python脚本，用于将PPTX文件转换为PNG图片。它依赖于<code>python-pptx</code>和<code>pillow</code>库进行图像处理，同时需要外部工具<code>unoconv</code>和<code>convert</code>（通常属于ImageMagick）进行文件格式转换。</p><h2 id="_2-主要功能" tabindex="-1">2. 主要功能 <a class="header-anchor" href="#_2-主要功能" aria-label="Permalink to &quot;2. 主要功能&quot;">​</a></h2><h3 id="_2-1-转换pptx到png" tabindex="-1">2.1 转换PPTX到PNG <a class="header-anchor" href="#_2-1-转换pptx到png" aria-label="Permalink to &quot;2.1 转换PPTX到PNG&quot;">​</a></h3><ul><li><strong>输入</strong>: PPTX文件路径和可选的输出目录。</li><li><strong>输出</strong>: 生成的PNG图片文件，存放在指定的输出目录中。</li></ul><h3 id="_2-2-错误处理" tabindex="-1">2.2 错误处理 <a class="header-anchor" href="#_2-2-错误处理" aria-label="Permalink to &quot;2.2 错误处理&quot;">​</a></h3><ul><li>检查输入的PPTX文件是否存在。</li><li>捕获并处理在转换过程中可能出现的异常，如PDF转换失败。</li></ul><h3 id="_2-3-日志输出" tabindex="-1">2.3 日志输出 <a class="header-anchor" href="#_2-3-日志输出" aria-label="Permalink to &quot;2.3 日志输出&quot;">​</a></h3><ul><li>打印转换过程中的关键信息，如开始转换、转换完成及生成的图片数量。</li><li>在出现错误时，打印错误信息。</li></ul><h2 id="_3-文件结构" tabindex="-1">3. 文件结构 <a class="header-anchor" href="#_3-文件结构" aria-label="Permalink to &quot;3. 文件结构&quot;">​</a></h2><h3 id="_3-1-导入模块" tabindex="-1">3.1 导入模块 <a class="header-anchor" href="#_3-1-导入模块" aria-label="Permalink to &quot;3.1 导入模块&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pptx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Presentation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PIL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Image</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> io</span></span></code></pre></div><h3 id="_3-2-主函数-pptx-to-png" tabindex="-1">3.2 主函数 <code>pptx_to_png</code> <a class="header-anchor" href="#_3-2-主函数-pptx-to-png" aria-label="Permalink to &quot;3.2 主函数 \`pptx_to_png\`&quot;">​</a></h3><ul><li><strong>参数</strong>: <code>pptx_path</code> (PPTX文件路径), <code>output_dir</code> (输出目录，默认为&quot;output&quot;)。</li><li><strong>功能</strong>: 执行PPTX到PNG的转换流程。</li></ul><h3 id="_3-3-命令行接口" tabindex="-1">3.3 命令行接口 <a class="header-anchor" href="#_3-3-命令行接口" aria-label="Permalink to &quot;3.3 命令行接口&quot;">​</a></h3><ul><li>检查命令行参数数量，确保至少提供了一个PPTX文件路径。</li><li>调用<code>pptx_to_png</code>函数，传递命令行参数作为输入。</li></ul><h2 id="_4-转换流程" tabindex="-1">4. 转换流程 <a class="header-anchor" href="#_4-转换流程" aria-label="Permalink to &quot;4. 转换流程&quot;">​</a></h2><ol><li><p><strong>检查PPTX文件是否存在</strong>:</p><ul><li>如果不存在，打印错误信息并返回。</li></ul></li><li><p><strong>创建输出目录</strong>:</p><ul><li>使用<code>os.makedirs</code>确保输出目录存在，如果目录已存在则不会报错。</li></ul></li><li><p><strong>加载PPTX文件</strong>:</p><ul><li>使用<code>Presentation</code>类加载PPTX文件。</li></ul></li><li><p><strong>转换为PDF</strong>:</p><ul><li>使用<code>unoconv</code>命令行工具将PPTX文件转换为PDF文件。</li><li>检查PDF文件是否成功生成，如果失败则抛出异常。</li></ul></li><li><p><strong>将PDF转换为PNG</strong>:</p><ul><li>使用<code>convert</code>命令行工具将PDF文件转换为PNG图片。</li><li>图片文件名格式为<code>slide_%d.png</code>，其中<code>%d</code>为幻灯片序号。</li></ul></li><li><p><strong>清理临时文件</strong>:</p><ul><li>删除生成的PDF文件。</li></ul></li><li><p><strong>统计并打印生成的图片数量</strong>:</p><ul><li>列出输出目录中的所有PNG文件，计算并打印数量。</li></ul></li><li><p><strong>异常处理</strong>:</p><ul><li>捕获并处理在转换过程中可能出现的任何异常，确保程序能够优雅地退出。</li></ul></li></ol><h2 id="_5-依赖说明" tabindex="-1">5. 依赖说明 <a class="header-anchor" href="#_5-依赖说明" aria-label="Permalink to &quot;5. 依赖说明&quot;">​</a></h2><ul><li><strong>python-pptx</strong>: 用于处理PPTX文件。</li><li><strong>pillow</strong>: 用于图像处理（虽然在此脚本中未直接使用，但通常与ImageMagick配合使用）。</li><li><strong>unoconv</strong>: 用于将PPTX转换为PDF。</li><li><strong>convert</strong> (ImageMagick): 用于将PDF转换为PNG。</li></ul><p>这些依赖项需要通过<code>pip</code>或系统包管理器进行安装。</p><h1 id="提取依赖项" tabindex="-1">提取依赖项 <a class="header-anchor" href="#提取依赖项" aria-label="Permalink to &quot;提取依赖项&quot;">​</a></h1><p>从提供的<code>ppt2png.py</code>文件中，我们可以提取出该脚本运行所需的依赖项。这些依赖项包括Python库和外部命令行工具。</p><h2 id="_1-python库" tabindex="-1">1. Python库 <a class="header-anchor" href="#_1-python库" aria-label="Permalink to &quot;1. Python库&quot;">​</a></h2><h3 id="_1-1-python-pptx" tabindex="-1">1.1 python-pptx <a class="header-anchor" href="#_1-1-python-pptx" aria-label="Permalink to &quot;1.1 python-pptx&quot;">​</a></h3><ul><li><strong>用途</strong>: 用于处理PPTX文件。</li><li><strong>安装命令</strong>: <code>pip install python-pptx</code></li></ul><h3 id="_1-2-pillow" tabindex="-1">1.2 pillow <a class="header-anchor" href="#_1-2-pillow" aria-label="Permalink to &quot;1.2 pillow&quot;">​</a></h3><ul><li><strong>用途</strong>: 用于图像处理（虽然在提供的脚本中未直接使用，但通常与ImageMagick配合使用）。</li><li><strong>安装命令</strong>: <code>pip install pillow</code></li></ul><h2 id="_2-外部命令行工具" tabindex="-1">2. 外部命令行工具 <a class="header-anchor" href="#_2-外部命令行工具" aria-label="Permalink to &quot;2. 外部命令行工具&quot;">​</a></h2><h3 id="_2-1-unoconv" tabindex="-1">2.1 unoconv <a class="header-anchor" href="#_2-1-unoconv" aria-label="Permalink to &quot;2.1 unoconv&quot;">​</a></h3><ul><li><strong>用途</strong>: 用于将PPTX文件转换为PDF文件。</li><li><strong>安装方法</strong>: <ul><li>在Ubuntu/Debian系统上: <code>sudo apt-get install unoconv</code></li><li>在CentOS/RHEL系统上: <code>sudo yum install unoconv</code></li><li>在macOS上: 可以通过Homebrew安装，<code>brew install unoconv</code></li><li>在Windows上: 可能需要手动安装LibreOffice并使用其自带的unoconv功能，或寻找其他Windows兼容的替代品。</li></ul></li></ul><h3 id="_2-2-convert-imagemagick" tabindex="-1">2.2 convert (ImageMagick) <a class="header-anchor" href="#_2-2-convert-imagemagick" aria-label="Permalink to &quot;2.2 convert (ImageMagick)&quot;">​</a></h3><ul><li><strong>用途</strong>: 用于将PDF文件转换为PNG图片。</li><li><strong>安装方法</strong>: <ul><li>在Ubuntu/Debian系统上: <code>sudo apt-get install imagemagick</code></li><li>在CentOS/RHEL系统上: <code>sudo yum install imagemagick</code></li><li>在macOS上: 可以通过Homebrew安装，<code>brew install imagemagick</code></li><li>在Windows上: 可以从<a href="https://imagemagick.org/script/download.php" target="_blank" rel="noreferrer">ImageMagick官网</a>下载并安装。</li></ul></li></ul><h2 id="_3-依赖项总结" tabindex="-1">3. 依赖项总结 <a class="header-anchor" href="#_3-依赖项总结" aria-label="Permalink to &quot;3. 依赖项总结&quot;">​</a></h2><table tabindex="0"><thead><tr><th>类型</th><th>依赖项</th><th>用途</th><th>安装命令/方法</th></tr></thead><tbody><tr><td>Python库</td><td>python-pptx</td><td>处理PPTX文件</td><td><code>pip install python-pptx</code></td></tr><tr><td>Python库</td><td>pillow</td><td>图像处理（未直接使用）</td><td><code>pip install pillow</code></td></tr><tr><td>外部工具</td><td>unoconv</td><td>将PPTX转换为PDF</td><td>Ubuntu/Debian: <code>sudo apt-get install unoconv</code> <br> CentOS/RHEL: <code>sudo yum install unoconv</code> <br> macOS: <code>brew install unoconv</code> <br> Windows: 手动安装LibreOffice或使用替代品</td></tr><tr><td>外部工具</td><td>convert</td><td>将PDF转换为PNG</td><td>Ubuntu/Debian: <code>sudo apt-get install imagemagick</code> <br> CentOS/RHEL: <code>sudo yum install imagemagick</code> <br> macOS: <code>brew install imagemagick</code> <br> Windows: 从<a href="https://imagemagick.org/script/download.php" target="_blank" rel="noreferrer">ImageMagick官网</a>下载并安装</td></tr></tbody></table><p>请确保在运行<code>ppt2png.py</code>脚本之前，已经正确安装了上述所有依赖项。</p><p>netsh interface portproxy add v4tov4 listenport=8000 connectaddress=10.0.1.201 connectport=8000</p><p>New-NetFirewallRule -DisplayName &quot;Allow Inbound TCP Port 5000&quot; -Direction Inbound -Action Allow -Protocol TCP -LocalPort 5000</p><p>netsh interface portproxy add v4tov4 listenport=8000 connectaddress=10.0.1.201 connectport=8000 protocol=tcp</p>`,41),p=[l];function h(e,k,r,o,d,E){return a(),i("div",null,p)}const y=s(t,[["render",h]]);export{c as __pageData,y as default};
