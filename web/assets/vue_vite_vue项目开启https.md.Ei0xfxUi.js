import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.CDwh3-Fg.js";const g=JSON.parse('{"title":"vite+vue项目开启https","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vite+vue项目开启https.md","filePath":"vue/vite+vue项目开启https.md","lastUpdated":1722500431000}'),e={name:"vue/vite+vue项目开启https.md"},t=n(`<h1 id="vite-vue项目开启https" tabindex="-1">vite+vue项目开启https <a class="header-anchor" href="#vite-vue项目开启https" aria-label="Permalink to &quot;vite+vue项目开启https&quot;">​</a></h1><p>原文地址：</p><p><a href="https://blog.csdn.net/qq_42543548/article/details/128389216" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_42543548/article/details/128389216</a></p><h2 id="vue开启https-加载本地证书" tabindex="-1">vue开启https，加载本地证书 <a class="header-anchor" href="#vue开启https-加载本地证书" aria-label="Permalink to &quot;vue开启https，加载本地证书&quot;">​</a></h2><h3 id="_1-通过mkcert创建本地证书" tabindex="-1">1. 通过mkcert创建本地证书 <a class="header-anchor" href="#_1-通过mkcert创建本地证书" aria-label="Permalink to &quot;1. 通过mkcert创建本地证书&quot;">​</a></h3><h4 id="_1-1-安装mkcert" tabindex="-1">1.1 安装mkcert <a class="header-anchor" href="#_1-1-安装mkcert" aria-label="Permalink to &quot;1.1 安装mkcert&quot;">​</a></h4><ul><li>安装方式：npm</li><li>包地址：<a href="https://www.npmjs.com/package/mkcert" target="_blank" rel="noreferrer">https://www.npmjs.com/package/mkcert</a></li><li>安装命令：<code>npm install -g mkcert</code></li><li>判断是否安装成功，输入命令：<code>mkcert --version</code> ，如果能看到版本号，说明安装成功，可以进行下一步</li></ul><h4 id="_1-2-生成证书" tabindex="-1">1.2 生成证书 <a class="header-anchor" href="#_1-2-生成证书" aria-label="Permalink to &quot;1.2 生成证书&quot;">​</a></h4><ul><li>生成一个 <code>ca</code> 证书，<code>mkcert create-ca</code> ，生成之后会看到一个 <code>ca.crt</code> 和 <code>ca.key</code> 文件</li><li>利用刚刚生成的 <code>ca</code> 证书，再生成 <code>cert</code> 证书， <code>mkcert create-cert</code> ，会在刚刚的路径下生成 <code>cert.crt</code> 和 <code>cert.key</code> 文件</li></ul><h4 id="_1-3-关键的时候来了-怎么使用" tabindex="-1">1.3 关键的时候来了，怎么使用 <a class="header-anchor" href="#_1-3-关键的时候来了-怎么使用" aria-label="Permalink to &quot;1.3 关键的时候来了，怎么使用&quot;">​</a></h4><h5 id="_1-3-1-需要将刚刚生成的-ca-crt-安装到电脑受信任的根证书中" tabindex="-1">1.3.1 需要将刚刚生成的 <code>ca.crt</code> 安装到电脑受信任的根证书中 <a class="header-anchor" href="#_1-3-1-需要将刚刚生成的-ca-crt-安装到电脑受信任的根证书中" aria-label="Permalink to &quot;1.3.1 需要将刚刚生成的 \`ca.crt\` 安装到电脑受信任的根证书中&quot;">​</a></h5><h6 id="_1-3-1-1-mac安装方式" tabindex="-1">1.3.1.1 mac安装方式 <a class="header-anchor" href="#_1-3-1-1-mac安装方式" aria-label="Permalink to &quot;1.3.1.1 mac安装方式&quot;">​</a></h6><p>...</p><h6 id="_1-3-1-2-window安装方式" tabindex="-1">1.3.1.2 window安装方式 <a class="header-anchor" href="#_1-3-1-2-window安装方式" aria-label="Permalink to &quot;1.3.1.2 window安装方式&quot;">​</a></h6><p>直接双击刚刚生成的 <code>ca.crt</code> 文件，弹出的界面中选择安装证书</p><ul><li>下一步弹窗中，选择“当前用户”或“本地计算机”均可，主要是下一步，选择“将所有的证书都放入下列存储”，并且选择为“受信任的根证书颁发机构”</li><li>一路点击完成，最后弹出点击“是”即可，到此证书安装成功了。</li></ul><h5 id="_1-3-2-在vue中使用刚刚的证书" tabindex="-1">1.3.2 在vue中使用刚刚的证书 <a class="header-anchor" href="#_1-3-2-在vue中使用刚刚的证书" aria-label="Permalink to &quot;1.3.2 在vue中使用刚刚的证书&quot;">​</a></h5><ul><li><p>将刚刚生成的 <code>cert.crt</code> 和 <code>cert.key</code> 两个拷贝到项目的 <code>src/ssl</code> 文件夹中，没有可以新建一个 <code>ssl</code> 目录</p></li><li><p>vue2在 <code>vue.config.js</code> 中写入以下关键代码</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;path&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    devServer: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        open: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        https: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        cert: fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readFileSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src/ssl/cert.crt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        key: fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readFileSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src/ssl/cert.key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>vue3在 <code>vite.config.js</code> 中写入以下关键代码</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vitejs/plugin-vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;path&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// https://vitejs.dev/config/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolve: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alias: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;@&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">server: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    open: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    https: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 主要是下面两行的配置文件，不要忘记引入 fs 和 path 两个对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cert: fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readFileSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src/ssl/cert.crt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    key: fs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readFileSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src/ssl/cert.key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li></ul><blockquote><p>到此，证书生成安装结束了，项目跑起来就ok了，感谢各位看官看到了最后，文章虽然啰嗦，但是“细”啊。</p></blockquote>`,19),h=[t];function l(p,k,r,d,E,c){return a(),i("div",null,h)}const y=s(e,[["render",l]]);export{g as __pageData,y as default};
