# guzzlehttp/guzzle：Guzzle 库是一套强大的 PHP HTTP 请求套件；是一个PHP的HTTP客户端，用来轻而易举地发送请求，并集成到我们的WEB服务上；Guzzle提供了简单的接口，构建查询语句、POST请求、分流上传下载大文件、使用HTTP cookies、上传JSON数据等等。

# overtrue/pinyin：PinYin 是 安正超 开发的，基于 CC-CEDICT 词典的中文转拼音工具，是一套优质的汉字转拼音解决方案。使用 PinYin 来作为翻译的后备计划，当百度翻译 API 不可用时，可让程序自动使用 PinYin 汉字转拼音方案来生成 Slug。

# predis/predis：redis扩展

# laravel/horizon：队列监控 Horizon。
# Horizon 是 Laravel 生态圈里的一员，为 Laravel Redis 队列提供了一个漂亮的仪表板，允许我们很方便地查看和管理 Redis 队列任务执行的情况。
# 安装完成后通过浏览器URL访问控制台：env('APP_URL')/horizon。
# 安装了 Horizon 以后，我们将使用 horizon 命令来启动队列系统和任务监控，无需使用 queue:listen。
# 需要注意的是，artisan horizon 队列工作的守护进程是一个常驻进程，它不会在你的代码改变时进行重启，当我们修改代码以后，需要在命令行中对其进行重启操作。
# Horizon 是一个监控程序，需要常驻运行，我们可以通过以下命令启动：
php artisan horizon

# laravel/horizon 队列监控 Horizon 线上部署须知：
# 在开发环境中，我们为了测试方便，直接在命令行里调用 artisan horizon 进行队列监控。然而在生产环境中，我们需要配置一个进程管理工具来监控 artisan horizon 命令的执行，以便在其意外退出时自动重启。当服务器部署新代码时，需要终止当前 Horizon 主进程，然后通过进程管理工具来重启，从而使用最新的代码。
# 简而言之，生产环境下使用队列需要注意以下两个问题：
# 1、使用 Supervisor 进程工具进行管理，配置和使用请参照 文档 进行配置；参考地址：https://learnku.com/docs/laravel/5.8/horizon/3945；
# 2、每一次部署代码时，需 artisan horizon:terminate 然后再 artisan horizon 重新加载代码；
# 3、线上部署的话，还要注意一个权限控制的问题；

# viacreative/sudo-su：用户切换工具 sudo-su。当需要切换多个用户来测试，频繁地退出和登录用户是一个费时的事情，可以使用 sudo-su 用户切换工具，来提高效率。

# dingo/api：dingo/api 是一个 Lumen 和 Laravel 都可用的 RestFul 工具包，帮助我们快速的开始构建 RestFul Api。

# overtrue/easy-sms：easy-sms 是安正超写的一个短信发送组件，利用这个组件，我们可以快速的实现短信发送功能。

# doctrine/dbal：修改数据表字段的属性时可能会用到该组件。

# gregwar/captcha：在 API 的开发中，我们将选择使用 gregwar/captcha 来完成图片验证码的功能。

# socialiteproviders/weixin：socialiteproviders 为 Laravel Socialite 提供了更多的第三方登录方式，基本上你需要的，都能在这里找到。这个组件方便我们完成整个 OAuth 流程，不过对于我们开发接口来说，只用到了它部分的功能。

# tymon/jwt-auth：jwt-auth 是 Laravel 和 lumen 的 JWT 组件。JWT 是 JSON Web Token 的缩写，是一个非常轻巧的规范，这个规范允许我们使用 JWT 在用户和服务器之间传递安全可靠的信息。
# 安装完成后，需要设置 JWT 的 secret，这个 secret 很重要，用于最后的签名，更换这个 secret 会导致之前生成的所有 token 无效。
php artisan jwt:secret

# liyu/dingo-serializer-switch：可以方便的切换 DataArraySerializer 和 ArraySerializer 两种数据结构，保证响应数据的结构统一。配合 dingo/api 扩展包使用。

# overtrue/laravel-query-logger：laravel-query-logger 是一个查询日志组件，可以输出 sql 查询日志。安装方法如下：
composer require overtrue/laravel-query-logger --dev

# barryvdh/laravel-cors：laravel跨域请求神器。文档：https://github.com/barryvdh/laravel-cors

# jpush/jpush：极光推送。

# encore/laravel-admin：一个可以快速构建后台管理的扩展包，它提供了页面组件和表单元素等功能，只需要使用很少的代码就实现功能完善的后台管理功能。
# 使用手册：http://laravel-admin.org/docs/zh
# 基本使用：
# 创建 管理后台 UsersController，其中 --model=App\\Models\\User 代表新创建的这个控制器是要对 App\Models\User 这个模型做增删改查。
php artisan admin:make UsersController --model=App\\Models\\User
# 新增角色时要注意，权限 要点击选择 Login / User setting / Dashboard / 用户管理，前两个权限是必须的，否则该用户将无法登录后台和修改资料，第三个权限是管理后台的首页，如果没有这个权限，在登录的时候会报错。

# overtrue/laravel-lang：中文语言包。

# yansongda/pay：这个库封装了支付宝和微信支付的接口，通过这个库我们就不需要去关注不同支付平台的接口差异，使用相同的方法、参数来完成支付功能，节省开发时间。

# endroid/qr-code：生成二维码。

# moontoast/math：这个库主要提供了 \Moontoast\Math\BigNumber 这个类，这个类的构造函数接受两个参数，第一个参数就是我们要参与运算的数值，第二个参数是可选参数，用于表示我们希望的计算精度（即精确到小数点后几位）。同时这个类提供了许多常见的算术运算方法，比如 加法 add()、减法 subtract()、乘法 multiply()、除法 divide() 等等。

# cblink/region：提供省市区联动数据，以及部分相关方法。